{"version":3,"sources":["components/pages/PresentationPage.js","components/res/urls.js","components/pages/Home.js","components/pages/SearchModal.js","components/marvel/data.js","components/icons/MainRouteIcon.js","components/icons/GraphViewIcon.js","components/pages/LoginModal.js","components/icons/AccountIcon.js","components/res/data.js","components/modals/AddDoisModal.js","components/modals/AddProjectModal.js","components/icons/AddSpaceIcon.js","components/visualisations/GraphVisualisation.js","components/icons/TableViewIcon.js","components/visualisations/TableVisualisation.js","components/icons/ChartViewIcon.js","components/visualisations/ChartVisualisation.js","components/modals/FilterDataModal.js","components/visualisations/GridVisualisation.js","components/apis/ScienceDirect.js","components/modals/SearchPapersModal.js","components/pages/Visualize.js","App.js","serviceWorker.js","index.js"],"names":["PresentationPage","props","localStorage","getItem","render","to","pathname","state","from","location","className","originalFetch","require","fetch","retries","retryDelay","getUrl","path","fetchUrl","url","json","callback","error","method","headers","body","JSON","stringify","then","response","data","catch","result","styles","list","flexWrap","transform","listItem","margin","maxWidth","rootList","display","justifyContent","Home","useState","lastAccessed","setLastAccessed","popular","setPopular","getSpaces","by","func","Object","keys","map","key","getPopular","inputArray","name","length","style","Typography","GridList","sort","a","b","item","i","GridListTile","src","GridListTileBar","title","actionIcon","IconButton","history","onClick","push","useEffect","icon","fontSize","checkedIcon","useStyles","makeStyles","theme","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","modal","alignItems","ModalSearch","closed","classes","React","open","setOpen","selected","setSelected","setKeys","parse","res","setItem","keywordsList","Array","console","log","count","slice","id","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","renderOption","Fragment","Checkbox","marginRight","checked","width","renderInput","params","TextField","variant","label","placeholder","onChange","event","value","d","Button","searchString","join","goToSpace","aria-label","aria-haspopup","color","Modal","onClose","aria-labelledby","aria-describedby","links","source","target","nodes","svg","size","symbolType","MainRouteIcon","home","anchorEl","setAnchorEl","handleClose","edge","aria-controls","currentTarget","Menu","keepMounted","Boolean","MenuItem","menuItemText","marginLeft","GraphViewIcon","setValue","handleClick","setVisualisation","val","Tooltip","arrow","TransitionComponent","Fade","showIcon","LoginModal","loggedIn","loginOrRegister","setLoginOrRegister","email","setEmail","password","setPassword","setName","logoutBody","FormControl","FormHelperText","removeItem","loginBody","InputLabel","htmlFor","Input","type","AccountIcon","anchorAccount","setAnchorAccount","handleAccountClose","convertId","givenId","startsWith","replace","fetchGraphData","space_id","setData","info","currentNode","Date","parseInt","relations","dst","convertToGraphData","addDois","doiList","err","filterByType","infoType","newData","filter","nodeInfo","AddDoisModal","enqueueSnackbar","useSnackbar","setDoiList","allFields","setAllFields","fields","setFields","handleCloseModal","updateFields","myFields","forEach","e","window","innerWidth","multiline","rows","fullWidth","paddingTop","shrink","Select","labelId","input","renderValue","indexOf","ListItemText","primary","dois","split","index","substring","myDois","ind","splice","AddProjectModal","setTitle","description","setDescription","AddSpaceIcon","GraphVisualisation","position","fgRef","useRef","coordinates","setCoordinates","openNodeMenu","setOpenNodeMenu","setCurrentNode","x","y","closeNodeMenu","focusNode","useCallback","node","distRatio","Math","hypot","z","current","cameraPosition","ref","graphData","linkWidth","onNodeClick","nodeColor","left","top","getContentAnchorEl","navigator","clipboard","writeText","TableViewIcon","paddingLeft","StyledTableCell","withStyles","head","common","black","white","TableCell","StyledTableRow","root","action","hover","TableRow","Paper","getPapersCellsFrom","row","component","scope","Link","href","date","toString","substr","year","align","c","r","t","getFieldsCellsFrom","getConnectionsCellsFrom","flexGrow","menuButton","breakpoints","up","search","borderRadius","shape","fade","searchIcon","height","pointerEvents","inputRoot","inputInput","transition","transitions","create","TableVisualisation","maxHeight","innerHeight","tableType","setTableType","tableCells","0","1","2","TableContainer","Grid","container","justify","xs","InputBase","inputProps","Table","stickyHeader","TableHead","header","TableBody","ChartViewIcon","charts","ChartVisualisation","myData","chartType","setChartType","chartData","setChartData","renderCount","setRenderCount","updateChartData","right","bottom","strokeDasharray","dataKey","stroke","activeDot","currentYear","getFullYear","reduce","currentValue","isNaN","citations","floor","barSize","scale","fill","FilterDataModal","setFilterRules","allData","paperTypes","setPaperTypes","allPaperTypes","setAllPaperTypes","queryText","setQueryText","fromDate","setFromDate","untilDate","setUntilDate","initialDates","setInitialDates","updateDefaults","types","getTime","marginTop","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","filterRules","filterData","toLowerCase","getFilter","GridVisualisation","checkedDois","setCheckedDois","overflow","paperInfo","link","authors","Intl","DateTimeFormat","month","day","abstract","download","doi","arr","getPaperBlock","querystring","articleTypes","getScienceDirectUrl","searchScienceDirect","query","addData","myQuery","inputQuery","qs","filterQuery","myUrl","redirect","referrerPolicy","authorInfo","filterResult","SearchPapersModal","showAdvanced","setShowAdvanced","papers","setPapers","pageNumber","setPageNumber","setQuery","addPapers","inputPapers","myPapers","concat","getQuery","valueOf","setQueryField","setDate","searchPapers","clear","FormControlLabel","control","Switch","Collapse","in","TabPanel","children","other","role","hidden","Box","a11yProps","rightGraphToolbar","ViewKeywords","decodeURI","setAllData","graphWidth","tabValue","setTabValue","graphViewValue","setGraphViewValue","setGraphData","AppBar","Toolbar","rules","nodeIds","elem","found","paperDate","setYear","filterByRules","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","ReactCursorPosition","activationInteractionMouse","INTERACTIONS","HOVER","hoverDelayInMs","hoverOffDelayInMs","server","channel","shard","appId","chatSupport","showSocialContext","showMetaData","skin","App","getMainAppBar","maxSnack","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac9b17a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nfunction PresentationPage(props) {\r\n    const loggedIn = localStorage.getItem(\"loggedIn\")\r\n    if (loggedIn) {\r\n        return (\r\n            <Route render={(props) => (\r\n                <Redirect to={{pathname: \"/home\", state: {from: props.location}}} />\r\n            )}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <p>Welcome to BioSpace!</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PresentationPage;\r\n","import React from \"react\";\r\n\r\nconst originalFetch = require('isomorphic-fetch');\r\nconst fetch = require('fetch-retry')(originalFetch, {\r\n    retries: 5,\r\n    retryDelay: 1000\r\n});\r\n\r\nexport const SITE = \"/\"\r\n\r\nexport const getUrl = (path) => {\r\n    return SITE + path\r\n}\r\n\r\nexport function fetchUrl(url, json, callback, error=null, method=\"post\") {\r\n    if (method === \"get\") {\r\n        fetch(\r\n            getUrl(url))\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                callback(data)\r\n            })\r\n            .catch((result) => {\r\n                if(error) {\r\n                    error(result)\r\n                }\r\n            })\r\n        return;\r\n    }\r\n    fetch(\r\n        getUrl(url), {\r\n            method: method,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(json)\r\n        })\r\n        .then(function (response) {\r\n            return response.json()\r\n        })\r\n        .then(function (data) {\r\n            callback(data)\r\n        })\r\n        .catch((result) => {\r\n            if(error) {\r\n                error(result)\r\n            }\r\n        })\r\n}\r\n","import React, {useDebugValue, useEffect, useState} from 'react';\r\nimport {fetchUrl} from \"../res/urls\";\r\nimport {\r\n    Box, Typography,\r\n    Grid, GridList, GridListTile, GridListTileBar, IconButton\r\n} from \"@material-ui/core\";\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport {Route} from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    const [lastAccessed, setLastAccessed] = useState([]);\r\n    const [popular, setPopular] = useState([]);\r\n\r\n    function getSpaces(by, func) {\r\n        fetchUrl(\"get_spaces\", {\r\n            \"by\": by\r\n        }, (data) => {\r\n            data = Object.keys(data).map((key) => data[key]);\r\n            func(data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n            getSpaces(\"popularity\", setPopular)\r\n            getSpaces(\"accessed\", setLastAccessed)\r\n        }, []\r\n    )\r\n\r\n    function getPopular(inputArray, name, keys) {\r\n        if (!inputArray.length) {\r\n            return null;\r\n        }\r\n        return <div style={{margin: 10}}>\r\n            <Typography>{name}</Typography>\r\n            <div style={styles.rootList}>\r\n                <GridList style={styles.list}>\r\n                    {inputArray\r\n                        .sort((a, b) => a[keys] < b[keys] ? 1 : -1)\r\n                        .map((item, i) => (\r\n                            <GridListTile\r\n                                style={styles.listItem}\r\n                            >\r\n                                <img\r\n                                    src=\"https://i.pinimg.com/originals/d9/f7/05/d9f70593f3d861704c83c34faff90705.png\"/>\r\n                                <GridListTileBar\r\n                                    title={item[\"id\"]}\r\n                                    actionIcon={\r\n                                        <IconButton>\r\n                                            <Route render={({history}) => (\r\n                                                <OpenInBrowserIcon\r\n                                                    onClick={() => {\r\n                                                        history.push('/s/' + item['id'])\r\n                                                    }}\r\n                                                >\r\n                                                    Open\r\n                                                </OpenInBrowserIcon>\r\n                                            )}/>\r\n                                        </IconButton>\r\n                                    }\r\n                                />\r\n                            </GridListTile>\r\n                        ))}\r\n                </GridList>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            {getPopular(popular, \"Popular\", \"popularity\")}\r\n            {getPopular(lastAccessed, \"Recent\", \"accessed\")}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    list: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)'\r\n    },\r\n    listItem: {\r\n        margin: 5,\r\n        maxWidth: 200\r\n    },\r\n    rootList: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around'\r\n    }\r\n};\r\n\r\nexport default Home;\r\n","import React, {useEffect} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {Button, Checkbox, TextField, IconButton} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {getUrl} from \"../res/urls\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\"/>;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\"/>;\r\nconst myKeys = [\r\n    {key: 'bioinformatics', count: 100},\r\n    {key: 'biomaterial', count: 100},\r\n    {key: 'tissue engineering', count: 100},\r\n    {key: 'biotechnology', count: 100},\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 10, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\n\r\nfunction ModalSearch({closed = true}) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(!closed);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [keys, setKeys] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        let keys = JSON.parse(localStorage.getItem(\"keywordsList\") || \"[]\");\r\n        if (!keys.length) {\r\n            keys = fetch(getUrl(\"graph/keywords\"))\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    localStorage.setItem(\"keywordsDict\", JSON.stringify(data[\"info\"]));\r\n                    let keywordsList = Array();\r\n                    for (let key in data[\"info\"]) {\r\n                        keywordsList.push({\"key\": key, \"count\": data[\"info\"][key]})\r\n                    }\r\n                    keys = keywordsList;\r\n                    localStorage.setItem(\"keywordsList\", JSON.stringify(keywordsList));\r\n                })\r\n                .catch(console.log)\r\n        }\r\n        keys = keys.sort((a, b) => (a.count < b.count) ? 1 : -1);\r\n        keys = keys.slice(0, 1000);\r\n        setKeys(keys);\r\n        }, []\r\n    )\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const goToSpace = ({history, searchString}) => {\r\n        fetch(\r\n            getUrl(\"space\"), {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"keys\": searchString,\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                if (data['id']) {\r\n                    history.push('/s/' + data['id'])\r\n                }\r\n            })\r\n    };\r\n\r\n    const body = (\r\n        <div className={classes.paper}>\r\n            <p id=\"simple-modal-description\">\r\n                Pick keywords\r\n            </p>\r\n            <Autocomplete\r\n                multiple\r\n                id=\"keywords-select\"\r\n                options={keys}\r\n                disableCloseOnSelect\r\n                getOptionLabel={(option) => option.key}\r\n                renderOption={(option, {selected}) => (\r\n                    <React.Fragment>\r\n                        <Checkbox\r\n                            icon={icon}\r\n                            checkedIcon={checkedIcon}\r\n                            style={{marginRight: 8}}\r\n                            checked={selected}\r\n                        />\r\n                        {option.key}\r\n                    </React.Fragment>\r\n                )}\r\n                style={{width: 500}}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Keywords\" placeholder=\"Bio\"/>\r\n                )}\r\n                onChange={(event, value) => {\r\n                    setSelected(value.map((d) => d.key).sort())\r\n                }}\r\n            />\r\n            <Route render={({history}) => (\r\n                <Button\r\n                    onClick={() => {\r\n                        const searchString = selected.join(',');\r\n                        goToSpace({history, searchString});\r\n                    }}\r\n                >\r\n                    Search\r\n                </Button>\r\n            )}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpen}\r\n                color=\"inherit\"\r\n            >\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                className={classes.modal}\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalSearch;\r\n","// only with pure configuration it's easy to replicate graphs such as\r\n// http://bl.ocks.org/eesur/be2abfb3155a38be4de4 using react-d3-graph\r\nimport React from \"react\";;\r\n\r\nconst data = {\r\n    links: [\r\n        // Groups\r\n        {\r\n            source: \"Marvel\",\r\n            target: \"Heroes\",\r\n        },\r\n        {\r\n            source: \"Marvel\",\r\n            target: \"Villains\",\r\n        },\r\n        {\r\n            source: \"Marvel\",\r\n            target: \"Teams\",\r\n        },\r\n        // Heroes\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Spider-Man\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"CAPTAIN MARVEL\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"HULK\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Black Widow\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Daredevil\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Wolverine\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Captain America\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Iron Man\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"THOR\",\r\n        },\r\n        // Villains\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Dr. Doom\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Mystique\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Red Skull\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Ronan\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Magneto\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Thanos\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Black Cat\",\r\n        },\r\n        // Teams\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Avengers\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Guardians of the Galaxy\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Defenders\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"X-Men\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Fantastic Four\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Inhumans\",\r\n        },\r\n    ],\r\n    nodes: [\r\n        // Groups\r\n        {\r\n            id: \"Marvel\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/marvel.png\",\r\n            size: 500,\r\n            fontSize: 18,\r\n        },\r\n        {\r\n            id: \"Heroes\",\r\n            symbolType: \"circle\",\r\n            color: \"red\",\r\n            size: 300,\r\n        },\r\n        {\r\n            id: \"Villains\",\r\n            symbolType: \"circle\",\r\n            color: \"red\",\r\n            size: 300,\r\n        },\r\n        {\r\n            id: \"Teams\",\r\n            symbolType: \"circle\",\r\n            color: \"red\",\r\n            size: 300,\r\n        },\r\n        // Heroes\r\n        {\r\n            id: \"Spider-Man\",\r\n            name: \"Peter Benjamin Parker\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_spiderman.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"CAPTAIN MARVEL\",\r\n            name: \"Carol Danvers\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_captainmarvel.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"HULK\",\r\n            name: \"Robert Bruce Banner\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_hulk.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Black Widow\",\r\n            name: \"Natasha Alianovna Romanova\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_blackwidow.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Daredevil\",\r\n            name: \"Matthew Michael Murdock\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_daredevil.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Wolverine\",\r\n            name: \"James Howlett\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_wolverine.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Captain America\",\r\n            name: \"Steven Rogers\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_captainamerica.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Iron Man\",\r\n            name: \"Tony Stark\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_ironman.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"THOR\",\r\n            name: \"Thor Odinson\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_thor.png\",\r\n            size: 400,\r\n        },\r\n        // Villains\r\n        {\r\n            id: \"Dr. Doom\",\r\n            name: \"Victor von Doom\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/drdoom.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Mystique\",\r\n            name: \"Unrevealed\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/mystique.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Red Skull\",\r\n            name: \"Johann Shmidt\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/redskull.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Ronan\",\r\n            name: \"Ronan\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/ronan.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Magneto\",\r\n            name: \"Max Eisenhardt\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/magneto.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Thanos\",\r\n            name: \"Thanos\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/thanos.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Black Cat\",\r\n            name: \"Felicia Hardy\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/blackcat.png\",\r\n            size: 400,\r\n        },\r\n        // Teams\r\n        {\r\n            id: \"Avengers\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/avengers.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Guardians of the Galaxy\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/gofgalaxy.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Defenders\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/defenders.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"X-Men\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/xmen.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Fantastic Four\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/fantasticfour.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Inhumans\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/inhumans.png\",\r\n            size: 400,\r\n        },\r\n    ],\r\n};\r\n\r\nexport default data;\r\n","import React, {useState} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport {\r\n    Toolbar, Menu, MenuItem, IconButton\r\n} from \"@material-ui/core\";\r\n\r\nfunction MainRouteIcon ({home=false, className=\"\"}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton edge=\"start\" className={className} color=\"inherit\" aria-label=\"menu\"\r\n                        aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                <DonutLargeIcon/>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={handleClose}>\r\n                    <Link to=\"/\">Root</Link>\r\n                </MenuItem>\r\n                {home ? <MenuItem onClick={handleClose}>\r\n                    <Link to=\"/home\">Home</Link>\r\n                </MenuItem> : null}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainRouteIcon;\r\n","import React, {useState} from 'react';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport MultilineChartIcon from '@material-ui/icons/MultilineChart';\r\nimport TableChartRoundedIcon from '@material-ui/icons/TableChartRounded';\r\nimport {\r\n    Menu, MenuItem, IconButton, Typography,\r\n    Tooltip, Fade\r\n} from \"@material-ui/core\";\r\n\r\nfunction GraphViewIcon({value, setValue}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function setVisualisation(val) {\r\n        handleClose()\r\n        setValue(val)\r\n    }\r\n\r\n    const showIcon = (name=null) => {\r\n        return <Tooltip title=\"Change view\" arrow TransitionComponent={Fade}><IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\r\n                           aria-controls=\"bubble-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n            {\r\n                value === 1 ? <TableChartRoundedIcon /> : value === 2 ? <MultilineChartIcon /> : <BubbleChartIcon />\r\n            }\r\n            {\r\n                name ? value === 1 ? \"table\" : value === 2 ? \"chart\" : \"graph\" : null\r\n            }\r\n        </IconButton></Tooltip>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showIcon()}\r\n            <Menu\r\n                id=\"bubble-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {value !== 0 ? <MenuItem onClick={() => {setVisualisation(0)}}>\r\n                    <BubbleChartIcon/>\r\n                    <Typography style={styles.menuItemText}>Graph</Typography>\r\n                </MenuItem> : null}\r\n                {value !== 1 ? <MenuItem onClick={() => {setVisualisation(1)}}>\r\n                    <TableChartRoundedIcon/>\r\n                    <Typography style={styles.menuItemText}>Table</Typography>\r\n                </MenuItem> : null}\r\n                {value !== 2 ? <MenuItem onClick={() => {setVisualisation(2)}}>\r\n                    <MultilineChartIcon/>\r\n                    <Typography style={styles.menuItemText}>Chart</Typography>\r\n                </MenuItem> : null}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    menuItemText: {\r\n        marginLeft: 3\r\n    }\r\n};\r\n\r\nexport default GraphViewIcon;\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {getUrl} from \"../res/urls\";\r\nimport {\r\n    Button, Checkbox, TextField, Typography,\r\n    FormHelperText, InputLabel, Input, FormControl\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 10, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\n\r\nfunction LoginModal({closed = true}) {\r\n    const loggedIn = localStorage.getItem(\"loggedIn\");\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(!closed);\r\n    // true to login, false to register\r\n    const [loginOrRegister, setLoginOrRegister] = React.useState(true);\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [name, setName] = React.useState(\"\");\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const switchLoginOrRegister = () => {\r\n        setLoginOrRegister(!loginOrRegister);\r\n    };\r\n\r\n    const doLogin = () => {\r\n        fetch(\r\n            getUrl(\"users/login\"), {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": password\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                if (data[\"email\"] === email) {\r\n                    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n                    localStorage.setItem(\"loggedIn\", \"true\")\r\n                    setOpen(false)\r\n                }\r\n            })\r\n    };\r\n\r\n    const doRegister = () => {\r\n        fetch(\r\n            getUrl(\"users/register\"), {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": password,\r\n                    \"name\": name\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                if (data[\"email\"] === email) {\r\n                    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n                    localStorage.setItem(\"loggedIn\", \"true\")\r\n                    setOpen(false)\r\n                }\r\n            })\r\n    };\r\n\r\n    const logoutBody = (\r\n        <div className={classes.paper}>\r\n            <FormControl>\r\n                <FormHelperText>Are you sure you want to logout?</FormHelperText>\r\n                <Route render={({history}) => (\r\n                    <Button onClick={() => {\r\n                        localStorage.removeItem(\"loggedIn\")\r\n                        setOpen(false)\r\n                        history.push('/')\r\n                    }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                )}/>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n    const loginBody = (\r\n        <div className={classes.paper}>\r\n            <FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"email\">Email address</InputLabel>\r\n                    <Input id=\"email\" type=\"email\" aria-describedby=\"Enter institution email address\"\r\n                           onChange={(event) => {\r\n                               setEmail(event.target.value)\r\n                           }}\r\n                    />\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"pass\">Password</InputLabel>\r\n                    <Input id=\"pass\" type=\"password\" aria-describedby=\"Enter password\"\r\n                           onChange={(event) => {\r\n                               setPassword(event.target.value)\r\n                           }}/>\r\n                </FormControl>\r\n                {\r\n                    !loginOrRegister ? <FormControl>\r\n                        <InputLabel htmlFor=\"name\">Full name</InputLabel>\r\n                        <Input id=\"name\" aria-describedby=\"Enter full name\"\r\n                               onChange={(event) => {\r\n                                   setName(event.target.value)\r\n                               }}/>\r\n                    </FormControl> : null\r\n                }\r\n                <FormControl>\r\n                    <FormHelperText onClick={switchLoginOrRegister}>\r\n                        {\r\n                            loginOrRegister ? \"Don't have an account? Click here to register..\" : \"I have an account, click here to login..\"\r\n                        }\r\n                    </FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Button onClick={loginOrRegister ? doLogin : doRegister}>{\r\n                        loginOrRegister ? \"Login\" : \"Register\"\r\n                    }</Button>\r\n                </FormControl>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Typography onClick={handleOpen}>{!loggedIn ? \"Login\" : \"Logout\"}</Typography>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"login-modal-title\"\r\n                aria-describedby=\"login-modal-description\"\r\n                className={classes.modal}\r\n            >\r\n                {loggedIn ? logoutBody : loginBody}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginModal;\r\n","import React, {useState} from 'react';\r\nimport LoginModal from \"../pages/LoginModal\";\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport {\r\n    Menu, MenuItem, IconButton, Typography, Toolbar\r\n} from \"@material-ui/core\";\r\n\r\nfunction AccountIcon({value, setValue}) {\r\n    const [anchorAccount, setAnchorAccount] = React.useState(null);\r\n    const handleAccountClick = (event) => {\r\n        setAnchorAccount(event.currentTarget);\r\n    };\r\n\r\n    const handleAccountClose = () => {\r\n        setAnchorAccount(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"account-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleAccountClick}\r\n                color=\"inherit\"\r\n            >\r\n                <AccountCircle/>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"account-menu\"\r\n                anchorEl={anchorAccount}\r\n                keepMounted\r\n                open={Boolean(anchorAccount)}\r\n                onClose={handleAccountClose}\r\n            >\r\n                <MenuItem onClick={handleAccountClose}>\r\n                    <LoginModal/>\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountIcon;\r\n","import React from \"react\";\r\nimport {fetchUrl} from \"./urls\";\r\nimport {node} from \"prop-types\";\r\n\r\n\r\nexport function convertId(givenId) {\r\n    let id = givenId;\r\n    if (id.startsWith('doi:/')) {\r\n        id = id.replace(\"doi:/\", \"https://doi.org\")\r\n    } else if (id.startsWith('pubmed:/')) {\r\n        id = id.replace('pubmed:/', 'https://pubmed.ncbi.nlm.nih.gov')\r\n    }\r\n    return id;\r\n}\r\n\r\nexport function convertToGraphData(info) {\r\n    let nodes = Array();\r\n    for (let key in info[\"nodes\"]) {\r\n        let currentNode = info[\"nodes\"][key];\r\n        if (currentNode[\"type\"] === \"paper\") {\r\n            currentNode[\"url\"] = currentNode[\"id\"]\r\n            if (currentNode[\"url\"].startsWith(\"doi:/\")) {\r\n                currentNode[\"url\"] = currentNode[\"url\"].replace(\"doi:/\", \"https://doi.org\")\r\n            } else if (currentNode[\"url\"].startsWith(\"pubmed:/\")) {\r\n                currentNode[\"url\"] = currentNode[\"url\"].replace('pubmed:/', 'https://pubmed.ncbi.nlm.nih.gov')\r\n            }\r\n        }\r\n        if (!(\"name\" in currentNode)) {\r\n            currentNode[\"name\"] = currentNode[\"id\"]\r\n        }\r\n        if(\"y\" in currentNode) {\r\n            currentNode[\"year\"] = currentNode[\"y\"]\r\n        }\r\n        if(!(\"date\" in currentNode)) {\r\n            if (\"ts\" in currentNode) {\r\n                currentNode[\"date\"] = new Date(parseInt(currentNode[\"ts\"]));\r\n            }\r\n        }\r\n        nodes.push(currentNode);\r\n    }\r\n    let relations = Array();\r\n    for (let dst in info[\"relationships\"]) {\r\n        for (let src in info[\"relationships\"][dst]) {\r\n            relations.push({\r\n                source: src,\r\n                target: dst,\r\n                type: info[\"relationships\"][dst][src]\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        links: relations,\r\n        nodes: nodes\r\n    }\r\n}\r\n\r\nexport function fetchGraphData(space_id, setData) {\r\n    fetchUrl(\"space\", {\r\n        \"id\": space_id\r\n    }, (data) => {\r\n        const keys = data['keys']\r\n        fetchUrl(\"graph/sub?keys=\" + keys, null, (info) => {\r\n            info = info[\"info\"];\r\n            setData(convertToGraphData(info));\r\n        }, null, \"get\")\r\n    })\r\n}\r\n\r\nexport function addDois(doiList, callback, keys = [], err = null) {\r\n    let body = {\r\n        \"doi\": doiList\r\n    };\r\n    if(keys.length > 0) {\r\n        body[\"keys\"] = keys\r\n    }\r\n    fetchUrl(\"add_dois\", body, (data) => {\r\n        callback(data[\"info\"]);\r\n    }, err)\r\n}\r\n\r\nexport function filterByType(data, infoType) {\r\n    if (infoType === 0) {\r\n        infoType = \"paper\"\r\n    } else if (infoType === 1) {\r\n        infoType = \"field\"\r\n    } else if (infoType === 2) {\r\n        infoType = \"connections\"\r\n    }\r\n    let newData = JSON.parse(JSON.stringify(data));\r\n    newData[\"nodes\"] = newData[\"nodes\"].filter(nodeInfo => nodeInfo[\"type\"] === infoType)\r\n    return newData;\r\n}\r\n\r\nexport function filterByRules(data, rules) {\r\n    let nodeIds = {};\r\n    data[\"nodes\"] = data[\"nodes\"].filter((item) => {\r\n        if (item[\"type\"] === \"field\") {\r\n            if (\"keys\" in rules && !(item[\"id\"] in rules[\"keys\"])) {\r\n                return false;\r\n            }\r\n            nodeIds[item[\"id\"]] = true;\r\n            return true;\r\n        }\r\n        if (item[\"type\"] !== \"paper\") {\r\n            return false;\r\n        }\r\n        if (\"title\" in rules) {\r\n            let elem = item[\"name\"] || item[\"id\"] || \"\";\r\n            let found = false;\r\n            for (let i = 0; i < rules[\"title\"].length; i++) {\r\n                if (elem.indexOf(rules[\"title\"][i]) !== -1) {\r\n                    found = true\r\n                    break\r\n                }\r\n            }\r\n            if (!found) {\r\n                return false;\r\n            }\r\n        }\r\n        if (\"types\" in rules && !(item[\"t\"] in [...rules[\"types\"], \"0\", \"1\"])) {\r\n            return false;\r\n        }\r\n        if (\"dates\" in rules) {\r\n            let paperDate = null;\r\n            if (\"ts\" in item) {\r\n                paperDate = new Date(parseInt(item[\"ts\"]));\r\n            } else if (\"y\" in item) {\r\n                paperDate = new Date(0, 0, 1, 0, 0);\r\n                paperDate.setYear(parseInt(item[\"y\"]));\r\n            } else {\r\n                return false;\r\n            }\r\n            if (!(paperDate >= rules[\"dates\"][0] && paperDate <= rules[\"dates\"][1])) {\r\n                return false;\r\n            }\r\n        }\r\n        nodeIds[item[\"id\"]] = true\r\n        return true;\r\n    })\r\n    data[\"links\"] = data[\"links\"].filter((item) => {\r\n        return item[\"source\"] in nodeIds && item[\"target\"] in nodeIds\r\n    })\r\n    return data;\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {addDois} from \"../res/data\";\r\nimport {\r\n    Button, Checkbox, TextField, Typography,\r\n    FormHelperText, InputLabel, Input, FormControl, Select, MenuItem, ListItemText\r\n} from '@material-ui/core';\r\nimport {useSnackbar} from \"notistack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 10, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\n\r\nfunction AddDoisModal({data, handleClose, closed = true}) {\r\n    const classes = useStyles();\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const [open, setOpen] = React.useState(!closed);\r\n\r\n    const [doiList, setDoiList] = useState(\"\");\r\n    const [allFields, setAllFields] = useState([]);\r\n    const [fields, setFields] = useState([]);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n        handleClose()\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const addDoiList = () => {\r\n        const dois = doiList.split('\\n').map((item, index) => {\r\n            if (item.startsWith('doi://')) {\r\n                return item.substring(6, item.length)\r\n            }\r\n            if (item.startsWith('http')) {\r\n                return item.split('doi.org/', 1)[1]\r\n            }\r\n            return item\r\n        })\r\n        let myDois = [...dois];\r\n        addDois(dois, (data) => {\r\n            Object.keys(data).forEach((key, index) => {\r\n                let ind = dois.indexOf(key);\r\n                if (ind !== -1) {\r\n                    dois.splice(ind, 1);\r\n                }\r\n            })\r\n            if (myDois.length > 0) {\r\n                setDoiList(myDois.join(\"\\n\"))\r\n                enqueueSnackbar(\"Successfully added all DOIs except those remaining in text box.\")\r\n            } else {\r\n                setDoiList(\"\")\r\n                enqueueSnackbar(\"Successfully added all DOIs.\")\r\n                handleCloseModal()\r\n            }\r\n        }, fields)\r\n    }\r\n\r\n    const updateFields = () => {\r\n        try {\r\n            let myFields = {};\r\n            data[\"nodes\"].filter((item) => {\r\n                return item[\"type\"] === \"field\"\r\n            }).forEach((item) => {\r\n                myFields[item[\"id\"]] = true\r\n            })\r\n            setAllFields(Object.keys(myFields));\r\n            // setFields(allFields);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const handleChangeFields = (event) => {\r\n        setFields(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateFields()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        updateFields()\r\n    }, [data])\r\n\r\n    const body = (\r\n        <div className={classes.paper}>\r\n            <FormControl style={{width: window.innerWidth * 0.45}}>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"dois\">DOIs</InputLabel>\r\n                    <Input\r\n                        id=\"dois\"\r\n                        value={doiList}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter one doi per line\"\r\n                        aria-describedby=\"Enter one doi per line\"\r\n                        multiline\r\n                        rows={6}\r\n                        onChange={(event) => {\r\n                            setDoiList(event.target.value)\r\n                        }}/>\r\n                </FormControl>\r\n                {allFields.length > 0 ? <FormControl fullWidth style={{paddingTop: 1}}>\r\n                    <InputLabel shrink id=\"connect-to-label\">Connect to</InputLabel>\r\n                    <Select\r\n                        labelId=\"connect-to-label\"\r\n                        id=\"connect-to\"\r\n                        multiple\r\n                        value={fields}\r\n                        onChange={handleChangeFields}\r\n                        input={<Input/>}\r\n                        renderValue={(selected) => selected.join(', ')}\r\n                    >\r\n                        {allFields.map((name) => (\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={fields.indexOf(name) > -1}/>\r\n                                <ListItemText primary={name}/>\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl> : null}\r\n                <FormControl>\r\n                    <Button onClick={addDoiList}>Add</Button>\r\n                </FormControl>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <MenuItem onClick={handleOpen}>\r\n            <Typography>Add DOIs</Typography>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleCloseModal}\r\n                aria-labelledby=\"add-dois-title\"\r\n                aria-describedby=\"add-dois-description\"\r\n                className={classes.modal}\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\nexport default AddDoisModal;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {\r\n    Button, Checkbox, TextField, Typography,\r\n    FormHelperText, InputLabel, Input, FormControl, Select, MenuItem, ListItemText\r\n} from '@material-ui/core';\r\nimport {fetchUrl} from \"../res/urls\";\r\nimport {useSnackbar} from \"notistack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 10, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\n\r\nfunction AddProjectModal({data, handleClose, closed = true}) {\r\n    const classes = useStyles();\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const [open, setOpen] = React.useState(!closed);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [allFields, setAllFields] = useState([]);\r\n    const [fields, setFields] = useState([]);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n        handleClose()\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const addProject = () => {\r\n        fetchUrl(\"add_project\", {\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"keys\": fields\r\n        }, (data) => {\r\n            enqueueSnackbar(\"Successfully added project \" + title)\r\n            setTitle(\"\")\r\n            setDescription(\"\")\r\n            handleCloseModal()\r\n        }, () => {\r\n            enqueueSnackbar(\"Failed to add project\")\r\n        })\r\n    };\r\n\r\n    const updateFields = () => {\r\n        try {\r\n            let myFields = {};\r\n            data[\"nodes\"].filter((item) => {\r\n                return item[\"type\"] === \"field\"\r\n            }).forEach((item) => {\r\n                myFields[item[\"id\"]] = true\r\n            })\r\n            setAllFields(Object.keys(myFields));\r\n            // setFields(allFields);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    const handleChangeFields = (event) => {\r\n        setFields(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateFields()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        updateFields()\r\n    }, [data])\r\n\r\n    const body = (\r\n        <div className={classes.paper}>\r\n            <FormControl style={{width: window.innerWidth * 0.6}}>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"title\">Title</InputLabel>\r\n                    <Input id=\"title\" type=\"text\" aria-describedby=\"Enter project title\"\r\n                           onChange={(event) => {\r\n                               setTitle(event.target.value)\r\n                           }}\r\n                    />\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"desc\">Description</InputLabel>\r\n                    <Input\r\n                        id=\"desc\"\r\n                        type=\"text\"\r\n                        aria-describedby=\"Enter project description\"\r\n                        multiline\r\n                        rows={5}\r\n                        onChange={(event) => {\r\n                            setDescription(event.target.value)\r\n                        }}/>\r\n                </FormControl>\r\n                {allFields.length > 0 ? <FormControl fullWidth style={{paddingTop: 1}}>\r\n                    <InputLabel shrink id=\"connect-to-label\">Connect to</InputLabel>\r\n                    <Select\r\n                        labelId=\"connect-to-label\"\r\n                        id=\"connect-to\"\r\n                        multiple\r\n                        value={fields}\r\n                        onChange={handleChangeFields}\r\n                        input={<Input/>}\r\n                        renderValue={(selected) => selected.join(', ')}\r\n                    >\r\n                        {allFields.map((name) => (\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={fields.indexOf(name) > -1}/>\r\n                                <ListItemText primary={name}/>\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl> : null}\r\n                <FormControl>\r\n                    <Button onClick={addProject}>Add</Button>\r\n                </FormControl>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <MenuItem onClick={handleOpen}>\r\n            <Typography>Add Project</Typography>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleCloseModal}\r\n                aria-labelledby=\"add-project-title\"\r\n                aria-describedby=\"add-project-description\"\r\n                className={classes.modal}\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\nexport default AddProjectModal;\r\n","import React, {useState} from 'react';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {\r\n    Menu, MenuItem, IconButton, Typography,\r\n    Tooltip, Fade\r\n} from \"@material-ui/core\";\r\nimport AddDoisModal from \"../modals/AddDoisModal\";\r\nimport AddProjectModal from \"../modals/AddProjectModal\";\r\n\r\nfunction AddSpaceIcon({data}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title=\"Add\" arrow TransitionComponent={Fade}>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\r\n                            aria-controls=\"bubble-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                    <AddCircleOutlineIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"bubble-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <AddProjectModal data={data} handleClose={handleClose}/>\r\n                <AddDoisModal data={data} handleClose={handleClose}/>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    menuItemText: {\r\n        marginLeft: 3\r\n    }\r\n};\r\n\r\nexport default AddSpaceIcon;\r\n","import React, {useEffect, useState, useCallback, useRef} from 'react';\r\nimport {ForceGraph3D} from \"react-force-graph\";\r\nimport {\r\n    Typography, Menu, MenuItem,\r\n    IconButton, Icon\r\n} from \"@material-ui/core\";\r\nimport {useSnackbar} from 'notistack';\r\nimport {convertId} from \"../res/data\";\r\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\n\r\nfunction GraphVisualisation({data, position, width = 500}) {\r\n    const fgRef = useRef();\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const [coordinates, setCoordinates] = useState([20, 20]);\r\n    const [openNodeMenu, setOpenNodeMenu] = useState(false);\r\n    const [currentNode, setCurrentNode] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setCoordinates([position.x, position.y]);\r\n    }, [openNodeMenu])\r\n\r\n    const closeNodeMenu = () => {\r\n        setOpenNodeMenu(false);\r\n    };\r\n\r\n    const focusNode = useCallback(node => {\r\n        // Aim at node from outside it\r\n        const distance = 40;\r\n        const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\r\n\r\n        fgRef.current.cameraPosition(\r\n            {x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio}, // new position\r\n            node, // lookAt ({ x, y, z })\r\n            3000  // ms transition duration\r\n        );\r\n    }, [fgRef]);\r\n\r\n    function showNodeMenu(node) {\r\n        return (\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={openNodeMenu}\r\n                keepMounted\r\n                open={Boolean(openNodeMenu)}\r\n                onClose={closeNodeMenu}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: coordinates[0],\r\n                    top: coordinates[1]\r\n                }}\r\n                getContentAnchorEl={null}\r\n            >\r\n                <MenuItem\r\n                            onClick={(event) => {\r\n                                let id = convertId(currentNode.id);\r\n                                navigator.clipboard.writeText(id);\r\n                                closeNodeMenu()\r\n                                enqueueSnackbar(\"Copied doi: \" + id);\r\n                            }}>\r\n                    <FileCopyIcon/>\r\n                    <Typography>Copy url</Typography>\r\n                </MenuItem>\r\n                <MenuItem\r\n                    onClick={(event) => {\r\n                        let url = convertId(currentNode.id);\r\n                        closeNodeMenu()\r\n                        window.open(url, \"_blank\");\r\n                    }}>\r\n                    <OpenInBrowserIcon/>\r\n                    <Typography>Open url</Typography>\r\n                </MenuItem>\r\n                <MenuItem\r\n                    onClick={(event) => {\r\n                        closeNodeMenu()\r\n                        focusNode(currentNode);\r\n                    }}>\r\n                    <FilterCenterFocusIcon/>\r\n                    <Typography>Focus node</Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    const handleClick = useCallback(node => {\r\n        setCurrentNode(node);\r\n        setOpenNodeMenu(true);\r\n    }, [fgRef]);\r\n\r\n    return (\r\n        <div>\r\n            <ForceGraph3D\r\n                ref={fgRef}\r\n                graphData={data}\r\n                linkWidth={2}\r\n                width={width}\r\n                onNodeClick={handleClick}\r\n                nodeColor={(item) => {\r\n                    if(item[\"type\"] === \"paper\") {\r\n                        return 'grey'\r\n                    }\r\n                    else if(item[\"type\"] === \"field\") {\r\n                        return 'green'\r\n                    }\r\n                    return 'white'\r\n                }}\r\n            />\r\n            {showNodeMenu()}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {};\r\n\r\nexport default GraphVisualisation;\r\n","import React, {useState} from 'react';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport {\r\n    Menu, MenuItem, IconButton, Typography\r\n} from \"@material-ui/core\";\r\n\r\nfunction TableViewIcon({value, setValue}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function setVisualisation(val) {\r\n        handleClose()\r\n        setValue(val)\r\n    }\r\n\r\n    const showIcon = (name=null) => {\r\n        return <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\r\n                           aria-controls=\"table-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n            {\r\n                value === 1 ? (<TextFieldsIcon />) : value === 2 ? <SettingsEthernetIcon /> : <InsertDriveFileIcon />\r\n            }\r\n            {\r\n                name ? value === 1 ? \"table\" : value === 2 ? \"chart\" : \"graph\" : null\r\n            }\r\n        </IconButton>\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingLeft: 10}}>\r\n            {showIcon()}\r\n            <Menu\r\n                id=\"table-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {value !== 0 ? <MenuItem onClick={() => {setVisualisation(0)}}>\r\n                    <InsertDriveFileIcon/>\r\n                    <Typography style={styles.menuItemText}>Papers</Typography>\r\n                </MenuItem> : null}\r\n                {value !== 1 ? <MenuItem onClick={() => {setVisualisation(1)}}>\r\n                    <TextFieldsIcon/>\r\n                    <Typography style={styles.menuItemText}>Fields</Typography>\r\n                </MenuItem> : null}\r\n                {value !== 2 ? <MenuItem onClick={() => {setVisualisation(2)}}>\r\n                    <SettingsEthernetIcon/>\r\n                    <Typography style={styles.menuItemText}>Connections</Typography>\r\n                </MenuItem> : null}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    menuItemText: {\r\n        marginLeft: 5\r\n    }\r\n};\r\n\r\nexport default TableViewIcon;\r\n","import React, {useEffect, useState, useCallback, useRef} from 'react';\r\nimport {withStyles, makeStyles, fade} from '@material-ui/core/styles';\r\nimport {\r\n    Table, TableBody, TableCell,\r\n    TableRow, TableHead, TableContainer,\r\n    Paper, Typography, Grid, InputBase, Link\r\n} from \"@material-ui/core\";\r\nimport {filterByType} from \"../res/data\";\r\nimport TableViewIcon from \"../icons/TableViewIcon\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst StyledPaper = withStyles((theme) => ({\r\n    root: {\r\n        // backgroundColor: '#212121'\r\n    }\r\n}))(Paper);\r\n\r\nfunction getPapersCellsFrom(data) {\r\n    console.log(data[\"nodes\"][3]);\r\n    return filterByType(data, \"paper\")[\"nodes\"].map((row) => (\r\n        <StyledTableRow key={row.id}>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n                <Link href={row.url} target=\"_blank\">\r\n                    {row.name ? row.name : \"-\"}\r\n                </Link>\r\n            </StyledTableCell>\r\n            <StyledTableCell>\r\n                {row.date ? row.date.toString().substr(0, 10) : row.year ? row.year : '-'}\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">{row.c ? row.c : '-'}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">{row.r ? row.r : '-'}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">{row.t ? row.t in [\"1\", \"0\"] ? 'paper' : row.t : '-'}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">-</StyledTableCell>\r\n        </StyledTableRow>\r\n    ))\r\n}\r\n\r\nfunction getFieldsCellsFrom(data) {\r\n    return filterByType(data, \"field\")[\"nodes\"].map((row) => (\r\n        <StyledTableRow key={row.id}>\r\n            <StyledTableCell component=\"th\" scope=\"row\">{row.id}</StyledTableCell>\r\n            <StyledTableCell\r\n                align=\"right\">{(data[\"links\"] || []).filter(item => item.target.id === row.id).length}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">-</StyledTableCell>\r\n        </StyledTableRow>\r\n    ))\r\n}\r\n\r\nfunction getConnectionsCellsFrom(data) {\r\n    console.log(data[\"links\"][0])\r\n    return data[\"links\"].map((row) => (\r\n        <StyledTableRow key={row.source.id + row.target.id}>\r\n            <StyledTableCell component=\"th\" scope=\"row\">{row.source.name}</StyledTableCell>\r\n            {/*<StyledTableCell>-</StyledTableCell>*/}\r\n            <StyledTableCell align=\"right\">{row.target.id}</StyledTableCell>\r\n        </StyledTableRow>\r\n    ))\r\n}\r\n\r\nfunction TableVisualisation({data, width = 500, maxHeight = window.innerHeight}) {\r\n    const classes = useStyles();\r\n    const [tableType, setTableType] = useState(0);\r\n\r\n    const headerNames = {\r\n        0: [[\"Title\", {}], [\"Date\", {align: \"right\"}],\r\n            [\"Citations\", {align: \"right\"}],\r\n            [\"References\", {align: \"right\"}],\r\n            [\"Type\", {align: \"right\"}],\r\n            [\"Options\", {align: \"right\"}]],\r\n        1: [[\"Name\", {}], [\"Connections\", {align: \"right\"}], [\"Opt\", {align: \"right\"}]],\r\n        2: [[\"From\", {}], [\"To\", {}]]\r\n    };\r\n\r\n    const tableCells = {\r\n        0: getPapersCellsFrom,\r\n        1: getFieldsCellsFrom,\r\n        2: getConnectionsCellsFrom\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper} style={{width: width, maxHeight: maxHeight}}>\r\n            <Grid container\r\n                  spacing={3}\r\n                  justify={\"space-between\"}\r\n                  alignItems={\"center\"}\r\n            >\r\n                <Grid item xs={3}>\r\n                    <TableViewIcon\r\n                        value={tableType}\r\n                        setValue={setTableType}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon/>\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{'aria-label': 'search'}}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Table stickyHeader aria-label=\"data-table\">\r\n                <TableHead>\r\n                    {headerNames[tableType].map((header) => (\r\n                        <StyledTableCell align={header[1][\"align\"]}>{header[0]}</StyledTableCell>\r\n                    ))}\r\n                </TableHead>\r\n                <TableBody>\r\n                    {tableCells[tableType](data)}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nexport default TableVisualisation;\r\n","import React, {useState} from 'react';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport {\r\n    Menu, MenuItem, IconButton, Typography, Button\r\n} from \"@material-ui/core\";\r\n\r\nfunction ChartViewIcon({charts, value, setValue}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function setVisualisation(val) {\r\n        handleClose()\r\n        setValue(val)\r\n    }\r\n\r\n    const showIcon = (name = null) => {\r\n        return <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n            <Typography\r\n                style={styles.menuItemText}>\r\n                {charts[value][1]}\r\n            </Typography>\r\n        </Button>\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingLeft: 10}}>\r\n            {showIcon()}\r\n            <Menu\r\n                id=\"table-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {charts.map((item, index) => {\r\n                    if (index === value) return null;\r\n                    return (\r\n                        <MenuItem onClick={() => {\r\n                            setVisualisation(index)\r\n                        }}>\r\n                            <Typography style={styles.menuItemText}>{item[1]}</Typography>\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    menuItemText: {\r\n        marginLeft: 5\r\n    }\r\n};\r\n\r\nexport default ChartViewIcon;\r\n","import React, {useEffect, useState, useCallback, useRef} from 'react';\r\nimport {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n    BarChart, Bar, Cell, ResponsiveContainer\r\n} from 'recharts';\r\nimport ChartViewIcon from \"../icons/ChartViewIcon\";\r\n\r\nfunction ChartVisualisation({myData, width = 500, maxHeight = window.innerHeight}) {\r\n    const [chartType, setChartType] = useState(0);\r\n    const [chartData, setChartData] = useState([]);\r\n    const [renderCount, setRenderCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        updateChartData()\r\n    }, [chartType])\r\n\r\n    const setChart = (value) => {\r\n        setChartType(value)\r\n    }\r\n\r\n    function updatePapersByYear() {\r\n        const currentYear = new Date().getFullYear();\r\n        const info = [...myData[\"nodes\"]].reduce((result, currentValue) => {\r\n            let year = currentValue.date ? currentValue.date.year :\r\n                currentValue.year ? parseInt(currentValue.year) : null;\r\n            if (year === null) {\r\n                return result;\r\n            }\r\n            try {\r\n                year = parseInt(year);\r\n                if (isNaN(year) || year <= 0 || year > currentYear) {\r\n                    return result;\r\n                }\r\n            } catch (e) {\r\n                return result;\r\n            }\r\n            if (!(year in result)) {\r\n                result[year] = 0\r\n            }\r\n            result[year] += 1\r\n            return result;\r\n        }, {});\r\n        setChartData([...Object.keys(info)\r\n            .map((key, index) => {\r\n                return {\r\n                    \"date\": key,\r\n                    \"value\": info[key]\r\n                }\r\n            })\r\n            .filter((item) => item.value === parseInt(item.value) && item.value > 0)\r\n            .sort((a, b) => {\r\n                return a.value < b.value\r\n            })])\r\n    }\r\n\r\n    function getPapersByYear() {\r\n        return (\r\n            <LineChart\r\n                key={renderCount}\r\n                width={width}\r\n                height={500}\r\n                data={[...chartData]}\r\n                margin={{\r\n                    top: 5, right: 30, left: 20, bottom: 5,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"date\"/>\r\n                <YAxis key={renderCount}/>\r\n                <Tooltip/>\r\n                <Legend/>\r\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\r\n            </LineChart>\r\n        )\r\n    }\r\n\r\n    function updateCitationsByYear() {\r\n        const currentYear = new Date().getFullYear();\r\n        const info = [...myData[\"nodes\"]].reduce((result, currentValue) => {\r\n            let year = currentValue.date ? currentValue.date.year :\r\n                currentValue.year ? parseInt(currentValue.year) : null;\r\n            if (year === null) {\r\n                return result;\r\n            }\r\n            const citations = currentValue.c ? parseInt(currentValue.c) : null;\r\n            if (citations === null || isNaN(citations)) {\r\n                return result;\r\n            }\r\n            try {\r\n                year = parseInt(year);\r\n                if (isNaN(year) || year <= 0 || year > currentYear) {\r\n                    return result;\r\n                }\r\n            } catch (e) {\r\n                return result;\r\n            }\r\n            console.log(result);\r\n            if (!(year in result)) {\r\n                result[year] = {\"sum\": 0, \"count\": 0}\r\n            }\r\n            result[year][\"count\"] += 1\r\n            result[year][\"sum\"] += citations\r\n            return result;\r\n        }, {});\r\n        setChartData([...Object.keys(info)\r\n            .map((key, index) => {\r\n                return {\r\n                    \"date\": key,\r\n                    \"sum\": info[key][\"sum\"],\r\n                    \"count\": info[key][\"count\"],\r\n                    \"avg\": Math.floor(info[key][\"sum\"] / info[key][\"count\"])\r\n                }\r\n            })\r\n            .filter((item) => item.count === parseInt(item.count) && item.count > 0)\r\n            .sort((a, b) => {\r\n                return a.date < b.date\r\n            })])\r\n    }\r\n\r\n    function getCitationsByYear() {\r\n        return (\r\n            <LineChart\r\n                key={renderCount}\r\n                width={width}\r\n                height={500}\r\n                data={[...chartData]}\r\n                margin={{\r\n                    top: 5, right: 30, left: 20, bottom: 5,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"date\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Legend/>\r\n                <Line type=\"monotone\" dataKey=\"sum\" stroke=\"#8884d8\" activeDot={{r: 8}}/>\r\n                <Line type=\"monotone\" dataKey=\"count\" stroke=\"#8884d8\"/>\r\n                <Line type=\"monotone\" dataKey=\"avg\" stroke=\"#8884d8\"/>\r\n                {/*<Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />*/}\r\n            </LineChart>\r\n        )\r\n    }\r\n\r\n    function updatePapersByType() {\r\n        const info = [...myData[\"nodes\"]].reduce((result, currentValue) => {\r\n            if (currentValue.type !== \"paper\") {\r\n                return result;\r\n            }\r\n            let type = currentValue.t || null;\r\n            if (type === null || type in [\"0\", \"1\"]) {\r\n                type = \"paper\";\r\n            }\r\n            if (!(type in result)) {\r\n                result[type] = 0\r\n            }\r\n            result[type] += 1\r\n            return result;\r\n        }, {});\r\n        const result = Object.keys(info)\r\n            .map((key, index) => {\r\n                return {\r\n                    \"type\": key,\r\n                    \"count\": info[key]\r\n                }\r\n            })\r\n            .filter((item) => item.count === parseInt(item.count) && item.count > 0)\r\n        setChartData(result)\r\n    }\r\n\r\n    function getPapersByType() {\r\n        return (\r\n            <BarChart\r\n                key={renderCount}\r\n                width={width}\r\n                height={500}\r\n                data={[...chartData]}\r\n                margin={{\r\n                    top: 5, right: 30, left: 20, bottom: 5,\r\n                }}\r\n                barSize={20}\r\n            >\r\n                <XAxis dataKey=\"type\" scale=\"point\" padding={{left: 2}}/>\r\n                <YAxis key={renderCount}/>\r\n                <Tooltip/>\r\n                <Legend/>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <Bar dataKey=\"count\" fill=\"#8884d8\" background={{fill: '#eee'}}/>\r\n            </BarChart>\r\n        )\r\n    }\r\n\r\n    const charts = [\r\n        [getPapersByYear, \"Papers by year\", updatePapersByYear],\r\n        [getCitationsByYear, \"Citations by year\", updateCitationsByYear],\r\n        [getPapersByType, \"Papers by type\", updatePapersByType]\r\n    ];\r\n\r\n    const updateChartData = () => {\r\n        charts[chartType][2]()\r\n        setRenderCount(renderCount + 1)\r\n    }\r\n\r\n    return (\r\n        <div style={{width: width + 40, maxHeight: maxHeight}}>\r\n            <div style={{paddingLeft: 10}}>\r\n                <ChartViewIcon\r\n                    charts={charts}\r\n                    value={chartType}\r\n                    setValue={setChart}\r\n                />\r\n            </div>\r\n            <ResponsiveContainer maxHeight={maxHeight * 0.8} key={renderCount}>\r\n                {charts[chartType][0]()}\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartVisualisation;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {\r\n    InputBase, IconButton, Fade, Tooltip, Input,\r\n    Modal, FormControl, InputLabel, FormHelperText,\r\n    Select, MenuItem, Checkbox, ListItemText,\r\n    Grid, Button,\r\n    Table, TableBody, TableCell,\r\n    TableRow, TableHead, TableContainer,\r\n    Paper, Typography\r\n} from \"@material-ui/core\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TableVisualisation from \"../visualisations/TableVisualisation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 10, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n}));\r\n\r\nfunction FilterDataModal({data, setFilterRules, allData}) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [paperTypes, setPaperTypes] = useState([]);\r\n    const [allPaperTypes, setAllPaperTypes] = useState([\"s1\", \"s2\", \"s3\"]);\r\n    const [fields, setFields] = useState([]);\r\n    const [queryText, setQueryText] = useState(\"\");\r\n    const [allFields, setAllFields] = useState([\"f1\", \"f2\", \"f3\"]);\r\n    const [fromDate, setFromDate] = useState(new Date('2014-08-18T21:11:54'));\r\n    const [untilDate, setUntilDate] = useState(new Date());\r\n    const [initialDates, setInitialDates] = useState([]);\r\n\r\n    const updateDefaults = () => {\r\n        try {\r\n            let types = {};\r\n            allData[\"nodes\"].forEach((item) => {\r\n                if (\"t\" in item) {\r\n                    if (!(item[\"t\"] in types) && !(item[\"t\"] in [\"1\", \"0\"])) {\r\n                        types[item[\"t\"]] = true\r\n                    }\r\n                }\r\n            })\r\n            setAllPaperTypes(Object.keys(types));\r\n            let myFields = {};\r\n            allData[\"nodes\"].filter((item) => {\r\n                return item[\"type\"] === \"field\"\r\n            }).forEach((item) => {\r\n                myFields[item[\"id\"]] = true\r\n            })\r\n            setAllFields(Object.keys(myFields));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // setup variables - all paper types, etc..\r\n        updateDefaults()\r\n        setInitialDates([new Date(fromDate.getTime()), new Date(untilDate.getTime())]);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // when data changes, update infos\r\n        updateDefaults()\r\n    }, [allData]);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChangeTypes = (event) => {\r\n        setPaperTypes(event.target.value);\r\n    };\r\n\r\n    const handleChangeFields = (event) => {\r\n        setFields(event.target.value);\r\n    };\r\n\r\n    const getFilter = () => {\r\n        let filterData = {};\r\n        if (queryText.length > 0) {\r\n            filterData[\"title\"] = queryText.substr(0, queryText.length).split(' ')\r\n                .filter((item) => {return item.length > 0}).map((item) => {\r\n                    return item.toLowerCase();\r\n                });\r\n        }\r\n        if (paperTypes.length > 0) {\r\n            filterData[\"types\"] = [...paperTypes];\r\n        }\r\n        if (fields.length > 0) {\r\n            filterData[\"keys\"] = [...fields];\r\n        }\r\n        if (fromDate.getTime() !== initialDates[0].getTime() ||\r\n            untilDate.getTime() !== initialDates[1].getTime()) {\r\n            filterData[\"dates\"] = [new Date(fromDate.getTime()), new Date(untilDate.getTime())];\r\n        }\r\n        return filterData;\r\n    };\r\n\r\n    const saveFilter = () => {\r\n        const filterRules = getFilter();\r\n        setFilterRules(filterRules);\r\n    };\r\n\r\n    const body = (\r\n        <div className={classes.paper}>\r\n            <Grid container justify={\"center\"}>\r\n                <FormControl>\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"key-search\">Search</InputLabel>\r\n                        <Input\r\n                            id=\"key-search\"\r\n                            aria-describedby=\"search\"\r\n                            inputProps={{'aria-label': 'search'}}\r\n                            onChange={(event) => {\r\n                                setQueryText(event.target.value)\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                    {allPaperTypes.length > 0 ? (\r\n                        <FormControl style={{marginTop: 5}}>\r\n                            <InputLabel shrink id=\"paper-type-label\">Item type</InputLabel>\r\n                            <Select\r\n                                labelId=\"paper-type-label\"\r\n                                id=\"paper-type\"\r\n                                multiple\r\n                                value={paperTypes}\r\n                                onChange={handleChangeTypes}\r\n                                input={<Input/>}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                // MenuProps={MenuProps}\r\n                            >\r\n                                {allPaperTypes.map((name) => (\r\n                                    <MenuItem key={name} value={name}>\r\n                                        <Checkbox checked={paperTypes.indexOf(name) > -1}/>\r\n                                        <ListItemText primary={name}/>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    ) : null}\r\n                    <FormControl>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"space-around\">\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"From date\"\r\n                                    value={fromDate}\r\n                                    onChange={setFromDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    id=\"until-date-picker-inline\"\r\n                                    label=\"Until date\"\r\n                                    value={untilDate}\r\n                                    onChange={setUntilDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                    </FormControl>\r\n                    {allFields.length > 0 ? <FormControl style={{paddingTop: 1}}>\r\n                        <InputLabel shrink id=\"paper-type-label\">Fields</InputLabel>\r\n                        <Select\r\n                            labelId=\"paper-type-label\"\r\n                            id=\"paper-type\"\r\n                            multiple\r\n                            value={fields}\r\n                            onChange={handleChangeFields}\r\n                            input={<Input/>}\r\n                            renderValue={(selected) => selected.join(', ')}\r\n                            // MenuProps={MenuProps}\r\n                        >\r\n                            {allFields.map((name) => (\r\n                                <MenuItem key={name} value={name}>\r\n                                    <Checkbox checked={fields.indexOf(name) > -1}/>\r\n                                    <ListItemText primary={name}/>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl> : null}\r\n                    <FormControl style={{marginTop: 5}}>\r\n                        <Button variant=\"contained\" onClick={saveFilter}>Save</Button>\r\n                    </FormControl>\r\n                </FormControl>\r\n            </Grid>\r\n            <div style={{maxHeight: 300, marginTop: 10}}>\r\n                <TableVisualisation\r\n                    data={data}\r\n                    maxHeight={300}\r\n                    width={window.innerWidth * 0.7}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title=\"Filter\" arrow TransitionComponent={Fade}>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\r\n                            onClick={handleOpen}>\r\n                    <FilterListIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"filter-graph-data\"\r\n                aria-describedby=\"filter-graph-data-description\"\r\n                className={classes.modal}\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilterDataModal;\r\n","import React, {useEffect, useState, useCallback, useRef} from 'react';\r\nimport {withStyles, makeStyles, fade} from '@material-ui/core/styles';\r\nimport {\r\n    Paper, Typography, Grid, InputBase, Link,\r\n    IconButton, Checkbox\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport {useSnackbar} from 'notistack';\r\n\r\nfunction getPaperBlock(data, enqueueSnackbar, checkedDois, setCheckedDois) {\r\n    function getAuthorsStr(inputAuthors) {\r\n        let authors = null;\r\n        if (inputAuthors.length > 0) {\r\n            authors = inputAuthors.join(\", \");\r\n            if (authors.length > 100) {\r\n                authors = authors.substr(0, 20)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid item container component={Paper}>\r\n            <Grid item xs={12}>\r\n                <Typography display=\"block\">\r\n                    <Link href={data.link} target=\"_blank\">\r\n                        {data.title}\r\n                    </Link>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={9} variant=\"overline\" display=\"block\">\r\n                <Typography>{data.authors.join(\", \").substr(0, 40)}</Typography>\r\n            </Grid>\r\n            <Grid item container xs={3} justify={\"flex-end\"} alignItems={\"flex-start\"} variant=\"overline\"\r\n                  display=\"block\">\r\n                <Typography>\r\n                    {new Intl.DateTimeFormat(\"en-GB\", {\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"2-digit\"\r\n                    }).format(data.date)}\r\n                </Typography>\r\n            </Grid>\r\n            {\r\n                data.abstract ?\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"caption\" display=\"block\">{data.abstract}</Typography>\r\n                    </Grid> : null\r\n            }\r\n            <Grid item container xs={6} alignItems={\"center\"}>\r\n                <Typography variant=\"caption\" display=\"block\">{data.type}</Typography>\r\n            </Grid>\r\n            <Grid item container xs={6} justify={\"flex-end\"} alignItems={\"flex-start\"}>\r\n                <IconButton edge=\"start\" color=\"inherit\"\r\n                            onClick={(event) => {\r\n                                window.open(data.download, \"_blank\");\r\n                            }}>\r\n                    <GetAppIcon/>\r\n                </IconButton>\r\n                <IconButton edge=\"start\" color=\"inherit\"\r\n                            onClick={(event) => {\r\n                                navigator.clipboard.writeText(data.doi);\r\n                                enqueueSnackbar(\"Copied doi: \" + data.doi);\r\n                            }}>\r\n                    <FileCopyIcon/>\r\n                </IconButton>\r\n                <Checkbox\r\n                    checked={checkedDois.indexOf(data.doi) !== -1}\r\n                    onChange={(event) => {\r\n                        let arr = [...checkedDois];\r\n                        const doi = data.doi;\r\n                        const index = checkedDois.indexOf(doi);\r\n                        if (index !== -1 && !event.target.checked) {\r\n                            arr.splice(index, 1);\r\n                            setCheckedDois(arr);\r\n                        } else if(index === -1 && event.target.checked) {\r\n                            arr.push(doi);\r\n                            setCheckedDois(arr);\r\n                        }\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nfunction GridVisualisation({data, checkedDois, setCheckedDois}) {\r\n    const {enqueueSnackbar} = useSnackbar();\r\n\r\n    return (\r\n        <div style={{\r\n            paddingTop: 20,\r\n            width: window.innerWidth * 0.5,\r\n            maxHeight: window.innerHeight * 0.5,\r\n            overflow: \"auto\"\r\n        }}>\r\n            {\r\n                data.length ? (<Grid container spacing={3}>\r\n                    {data.map((paperInfo) => getPaperBlock(paperInfo, enqueueSnackbar, checkedDois, setCheckedDois))}\r\n                </Grid>) : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GridVisualisation;\r\n","import React, {useState} from 'react';\r\n\r\nconst querystring = require('querystring');\r\n// const originalFetch = require('isomorphic-fetch');\r\n// const fetch = require('fetch-retry')(originalFetch, {\r\n//     retries: 5,\r\n//     retryDelay: 1000\r\n// });\r\nconst root = \"https://www.sciencedirect.com\";\r\nconst url = root + \"/search/api\"\r\nconst articleTypes = {\r\n    \"Review articles\": \"REV\",\r\n    \"Research articles\": \"FLA\",\r\n    \"Encyclopedia\": \"EN\",\r\n    \"Book chapters\": \"CH\",\r\n    \"Conference abstracts\": \"ABS\",\r\n    \"Book reviews\": \"BRV\",\r\n    \"Case reports\": \"CRP\",\r\n    \"Conference info\": \"CNF\",\r\n    \"Correspondence\": \"COR\",\r\n    \"Data articles\": \"DAT\",\r\n    \"Discussion\": \"DIS\",\r\n    \"Editorials\": \"EDI\",\r\n    \"Errata\": \"ERR\",\r\n    \"Examinations\": \"EXM\",\r\n    \"Mini reviews\": \"SSU\",\r\n    \"News\": \"NWS\",\r\n    \"Patent reports\": \"PNT\",\r\n    \"Practice guidelines\": \"PGL\",\r\n    \"Product reviews\": \"PRV\",\r\n    \"Replication studies\": \"RPL\",\r\n    \"Short communications\": \"SCO\",\r\n    \"Software publications\": \"OSP\",\r\n    \"Video articles\": \"VID\",\r\n    \"Other\": \"OT\"\r\n}\r\n// const reverseArticleTypes = Object.keys(articleTypes).reduce((ret, key) => {\r\n//     ret[articleTypes[key]] = key;\r\n//     return ret;\r\n// }, {});\r\nconst resultsPerPage = 20;\r\n\r\nfunction getScienceDirectUrl(link) {\r\n    if(link.startsWith(\"/\")) {\r\n        link = root + link;\r\n    }\r\n    return link;\r\n}\r\n\r\nfunction filterQuery(inputQuery) {\r\n    let query = {qs: inputQuery[\"text\"]};\r\n    if (inputQuery[\"date-range\"]) {\r\n        let date = \"\";\r\n        if (inputQuery[\"date-range\"][0] === inputQuery[\"date-range\"][1]) {\r\n            date = inputQuery[\"date-range\"][0].getFullYear().toString();\r\n        } else {\r\n            date = inputQuery[\"date-range\"][0].getFullYear().toString() +\r\n                \"-\" + inputQuery[\"date-range\"][1].getFullYear().toString();\r\n        }\r\n        query[\"date\"] = date;\r\n    }\r\n    for (let key in [\"authors\", \"affiliations\", \"title\", \"reference\"]) {\r\n        if (inputQuery[key]) {\r\n            query[key] = inputQuery[key]\r\n        }\r\n    }\r\n    if (inputQuery[\"types\"]) {\r\n        let types = inputQuery[\"types\"]\r\n            .filter((item) => item in articleTypes)\r\n            .map((item) => articleTypes[item]);\r\n        if (types.length > 0) {\r\n            query[\"articleTypes\"] = types.join(\",\");\r\n        }\r\n    }\r\n    query[\"show\"] = inputQuery[\"resultsPerPage\"] || resultsPerPage;\r\n    if (inputQuery[\"page\"]) {\r\n        query[\"offset\"] = query[\"show\"] * inputQuery[\"page\"];\r\n    }\r\n    if (inputQuery[\"specificKeywords\"]) {\r\n        query[\"tak\"] = inputQuery[\"specificKeywords\"]\r\n    }\r\n    return query\r\n}\r\n\r\nfunction filterResult(result, data) {\r\n    // get only a part of data from result\r\n    let info = {\"title\": result[\"title\"].replace(/<[^>]+>/g, ''),\r\n        \"doi\": result[\"doi\"]};\r\n    if(result[\"sortDate\"]) {\r\n        info[\"date\"] = new Date(result[\"sortDate\"]);\r\n    }\r\n    if((result[\"authors\"] || []).length > 0) {\r\n        info[\"authors\"] = [];\r\n        for(let i = 0; i < result[\"authors\"].length; i++) {\r\n            const authorInfo = result[\"authors\"][i];\r\n            if(authorInfo[\"order\"] === i) {\r\n                info[\"authors\"].push(authorInfo[\"name\"]);\r\n            }\r\n        }\r\n    }\r\n    if (result[\"articleType\"]) {\r\n        info[\"type\"] = result[\"articleTypeDisplayName\"];\r\n    }\r\n    if(result[\"score\"]) {\r\n        info[\"score\"] = result[\"score\"];\r\n    }\r\n    if(result[\"link\"]) {\r\n        info[\"link\"] = getScienceDirectUrl(result[\"link\"]);\r\n    }\r\n    if(result[\"pdf\"] && result[\"pdf\"][\"downloadLink\"]) {\r\n        info[\"download\"] = getScienceDirectUrl(result[\"pdf\"][\"downloadLink\"]);\r\n    }\r\n    return info;\r\n}\r\n\r\nexport function searchScienceDirect(query, addData) {\r\n    const myQuery = filterQuery(query);\r\n    const myUrl = url + \"?\" + querystring.stringify(myQuery);\r\n    console.log(myUrl);\r\n\r\n    fetch(myUrl, {\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer'\r\n    })\r\n        .then(function (response) {\r\n            return response.json()\r\n        })\r\n        .then(function (data) {\r\n            addData(data[\"searchResults\"]\r\n                .map((item) => filterResult(item, data)));\r\n        })\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {\r\n    InputBase, IconButton, Fade, Tooltip, Input,\r\n    Modal, FormControl, InputLabel, FormHelperText,\r\n    Select, MenuItem, Checkbox, ListItemText,\r\n    Grid, Button, Collapse, Paper, FormControlLabel, Switch,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport GridVisualisation from \"../visualisations/GridVisualisation\";\r\nimport {searchScienceDirect} from \"../apis/ScienceDirect\";\r\nimport {addDois} from \"../res/data\";\r\nimport {useSnackbar} from 'notistack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 10, 3)\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    }\r\n}));\r\n\r\nfunction SearchPapersModal({data, allData}) {\r\n    const classes = useStyles();\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const [open, setOpen] = useState(false);\r\n    const [showAdvanced, setShowAdvanced] = useState(false);\r\n    const [papers, setPapers] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [queryText, setQueryText] = useState(\"\");\r\n    const [checkedDois, setCheckedDois] = useState([]);\r\n    const [showMore, setShowMore] = useState(false);\r\n    const [fromDate, setFromDate] = useState(new Date('1999-08-18T21:11:54'));\r\n    const [untilDate, setUntilDate] = useState(new Date());\r\n    const [query, setQuery] = useState({});\r\n    const [allFields, setAllFields] = useState([]);\r\n    const [fields, setFields] = useState([]);\r\n\r\n    const addPapers = (inputPapers) => {\r\n        if (inputPapers && inputPapers.length > 0) {\r\n            let myPapers = [...papers];\r\n            myPapers = myPapers.concat(inputPapers);\r\n            setPapers(myPapers);\r\n        }\r\n    };\r\n\r\n    const updateFields = () => {\r\n        try {\r\n            let myFields = {};\r\n            allData[\"nodes\"].filter((item) => {\r\n                return item[\"type\"] === \"field\"\r\n            }).forEach((item) => {\r\n                myFields[item[\"id\"]] = true\r\n            })\r\n            setAllFields(Object.keys(myFields));\r\n            // setFields(allFields);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateFields()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        updateFields()\r\n    }, [allData])\r\n\r\n    const getQuery = () => {\r\n        let myQuery = {\"text\": queryText.valueOf(), ...query};\r\n        myQuery[\"page\"] = pageNumber;\r\n        return myQuery;\r\n    };\r\n\r\n    function setQueryField(name, value) {\r\n        let myQuery = {...query};\r\n        myQuery[name] = value;\r\n        setQuery(myQuery);\r\n    }\r\n\r\n    function setDate() {\r\n        setQueryField(\"date-range\", [fromDate, untilDate]);\r\n    }\r\n\r\n    const searchPapers = (clear = true) => {\r\n        if (clear) {\r\n            setPapers([]);\r\n            setPageNumber(0);\r\n        }\r\n        const myQuery = getQuery();\r\n        searchScienceDirect(myQuery, addPapers);\r\n    };\r\n\r\n    const getMorePapers = () => {\r\n        setPageNumber(pageNumber + 1);\r\n        searchPapers(false);\r\n    };\r\n\r\n    const addSelected = () => {\r\n        if (checkedDois.length > 0) {\r\n            let dois = [...checkedDois];\r\n            addDois(checkedDois, (data) => {\r\n                    Object.keys(data).forEach((key, index) => {\r\n                        let ind = dois.indexOf(key);\r\n                        if (ind !== -1) {\r\n                            dois.splice(ind, 1);\r\n                        }\r\n                    })\r\n                    setCheckedDois(dois);\r\n                    if (dois.length === 0) {\r\n                        enqueueSnackbar(\"Successfully added all selected.\")\r\n                    } else {\r\n                        enqueueSnackbar(\"Added all dois, except those that remained selected.\");\r\n                    }\r\n                }, fields,\r\n                () => {\r\n                    enqueueSnackbar(\"Failed to add any selected\");\r\n                })\r\n        }\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChangeFields = (event) => {\r\n        setFields(event.target.value);\r\n    };\r\n\r\n    const changeShowAdvanced = () => {\r\n        setShowAdvanced(!showAdvanced);\r\n    };\r\n\r\n    const body = (\r\n        <div className={classes.paper}>\r\n            <Grid container justify={\"center\"}>\r\n                <FormControl style={{width: window.innerWidth * 0.35}}>\r\n                    <FormControl>\r\n                        <InputLabel htmlFor=\"search-text\">Search</InputLabel>\r\n                        <Input\r\n                            id=\"search-text\"\r\n                            aria-describedby=\"search\"\r\n                            inputProps={{'aria-label': 'search'}}\r\n                            onChange={(event) => {\r\n                                setQueryText(event.target.value)\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControlLabel control={\r\n                        <Switch checked={showAdvanced} onChange={changeShowAdvanced}/>\r\n                    } label={\"Show Advanced\"}/>\r\n                    <Collapse in={showAdvanced}>\r\n                        <FormControl fullWidth>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"From date\"\r\n                                        value={fromDate}\r\n                                        onChange={(date) => {\r\n                                            if (date) {\r\n                                                setFromDate(date)\r\n                                                setDate()\r\n                                            }\r\n                                        }}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"until-date-picker-inline\"\r\n                                        label=\"Until date\"\r\n                                        value={untilDate}\r\n                                        onChange={(date) => {\r\n                                            if (date) {\r\n                                                setUntilDate(date)\r\n                                                setDate()\r\n                                            }\r\n                                        }}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </FormControl>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"authors-text\">Authors</InputLabel>\r\n                            <Input\r\n                                id=\"authors-text\"\r\n                                aria-describedby=\"authors\"\r\n                                inputProps={{'aria-label': 'search'}}\r\n                                onChange={(event) => {\r\n                                    setQueryField(\"authors\", event.target.value);\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"affiliations-text\">Affiliations</InputLabel>\r\n                            <Input\r\n                                id=\"affiliations-text\"\r\n                                aria-describedby=\"affiliations\"\r\n                                inputProps={{'aria-label': 'search'}}\r\n                                onChange={(event) => {\r\n                                    setQueryField(\"affiliations\", event.target.value);\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"title-text\">Title</InputLabel>\r\n                            <Input\r\n                                id=\"title-text\"\r\n                                aria-describedby=\"title\"\r\n                                inputProps={{'aria-label': 'search'}}\r\n                                onChange={(event) => {\r\n                                    setQueryField(\"title\", event.target.value);\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"references-text\">Reference</InputLabel>\r\n                            <Input\r\n                                id=\"references-text\"\r\n                                aria-describedby=\"references\"\r\n                                inputProps={{'aria-label': 'search'}}\r\n                                onChange={(event) => {\r\n                                    setQueryField(\"references\", event.target.value);\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n                        {allFields.length > 0 ? <FormControl fullWidth style={{paddingTop: 1}}>\r\n                            <InputLabel shrink id=\"paper-type-label\">Connect to</InputLabel>\r\n                            <Select\r\n                                labelId=\"paper-type-label\"\r\n                                id=\"paper-type\"\r\n                                multiple\r\n                                value={fields}\r\n                                onChange={handleChangeFields}\r\n                                input={<Input/>}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                            >\r\n                                {allFields.map((name) => (\r\n                                    <MenuItem key={name} value={name}>\r\n                                        <Checkbox checked={fields.indexOf(name) > -1}/>\r\n                                        <ListItemText primary={name}/>\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl> : null}\r\n                    </Collapse>\r\n                    <FormControl>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={searchPapers}>Search</Button>\r\n                    </FormControl>\r\n                </FormControl>\r\n            </Grid>\r\n            <GridVisualisation data={papers} checkedDois={checkedDois} setCheckedDois={setCheckedDois}/>\r\n            <Grid container justify={\"flex-end\"} spacing={2}>\r\n                {\r\n                    checkedDois.length > 0 ? <Grid item>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={addSelected}\r\n                        >\r\n                            Add Selected\r\n                        </Button>\r\n                    </Grid> : null\r\n                }\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={getMorePapers}\r\n                    >\r\n                        More\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title=\"Search Papers\" arrow TransitionComponent={Fade}>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\r\n                            onClick={handleOpen}>\r\n                    <SearchIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"search-graph-data\"\r\n                aria-describedby=\"search-graph-data-description\"\r\n                className={classes.modal}\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchPapersModal;\r\n","import React, {useEffect, useState} from 'react';\r\nimport data from '../marvel/data';\r\nimport WidgetBot from \"@widgetbot/react-embed\";\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    AppBar, Toolbar, Tabs,\r\n    IconButton, Tab, Box, Typography\r\n} from \"@material-ui/core\";\r\nimport {\r\n    List, ListItem, Paper,\r\n    Tooltip, Fade\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport MainRouteIcon from \"../icons/MainRouteIcon\";\r\nimport GraphViewIcon from \"../icons/GraphViewIcon\";\r\nimport AccountIcon from \"../icons/AccountIcon\";\r\nimport AddSpaceIcon from \"../icons/AddSpaceIcon\";\r\nimport GraphVisualisation from \"../visualisations/GraphVisualisation\";\r\nimport TableVisualisation from \"../visualisations/TableVisualisation\";\r\nimport ChartVisualisation from \"../visualisations/ChartVisualisation\";\r\nimport {fetchGraphData, filterByRules} from \"../res/data\";\r\nimport FilterDataModal from \"../modals/FilterDataModal\";\r\nimport SearchPapersModal from \"../modals/SearchPapersModal\";\r\nimport ScriptTag from 'react-script-tag';\r\nimport { FacebookProvider, Group, CustomChat } from 'react-facebook';\r\nimport ReactCursorPosition, {INTERACTIONS} from 'react-cursor-position';\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nfunction ViewKeywords(props) {\r\n    const space_id = decodeURI(window.location.href).split('/s/')[1];\r\n    const [allData, setAllData] = useState(data);\r\n    const [myData, setData] = useState(data);\r\n    const [graphWidth, setGraphWidth] = useState(window.innerWidth / 3 * 2);\r\n\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    const [graphViewValue, setGraphViewValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    const setGraphData = (data) => {\r\n        setData(data);\r\n        setAllData(data);\r\n    };\r\n\r\n    const filterGraphData = (rules) => {\r\n        let result = filterByRules(\r\n            JSON.parse(JSON.stringify(allData))\r\n            , rules);\r\n        setData(result);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchGraphData(space_id, setGraphData)\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display: \"flex\"}}>\r\n                <AppBar\r\n                    position=\"static\"\r\n                    color=\"default\"\r\n                    style={{width: graphWidth}}>\r\n                    <Toolbar variant=\"dense\">\r\n                        <MainRouteIcon home/>\r\n                        <GraphViewIcon value={graphViewValue} setValue={setGraphViewValue}/>\r\n                        <Toolbar variant=\"dense\" style={styles.rightGraphToolbar}>\r\n                            <FilterDataModal\r\n                                data={myData}\r\n                                setFilterRules={filterGraphData}\r\n                                allData={allData}\r\n                            />\r\n                            <SearchPapersModal\r\n                                data={myData}\r\n                                allData={allData}\r\n                            />\r\n                            <AddSpaceIcon data={myData} />\r\n                        </Toolbar>\r\n                        <AccountIcon/>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <AppBar\r\n                    position=\"static\"\r\n                    color=\"default\"\r\n                    style={{width: window.innerWidth - graphWidth}}>\r\n                    <Tabs\r\n                        value={tabValue}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        <Tab label={\"Info\"} {...a11yProps(0)} />\r\n                        <Tab label=\"Discord\" {...a11yProps(1)} />\r\n                        <Tab label=\"Facebook\" {...a11yProps(2)} />\r\n                        <Tab label=\"Reddit\" {...a11yProps(3)} />\r\n                        <Tab label=\"Item Five\" {...a11yProps(4)} />\r\n                        <Tab label=\"Item Six\" {...a11yProps(5)} />\r\n                        <Tab label=\"Item Seven\" {...a11yProps(6)} />\r\n                    </Tabs>\r\n                </AppBar>\r\n            </div>\r\n            <div style={{display: \"flex\"}}>\r\n                {graphViewValue === 1 ? <TableVisualisation\r\n                        data={myData}\r\n                        width={graphWidth}\r\n                    /> :\r\n                    graphViewValue === 2 ? <ChartVisualisation\r\n                            myData={myData}\r\n                            width={graphWidth}\r\n                        /> :\r\n                        <ReactCursorPosition\r\n                            activationInteractionMouse={INTERACTIONS.HOVER} //default\r\n                            hoverDelayInMs={250} //default: 0\r\n                            hoverOffDelayInMs={150} //default: 0>\r\n                        >\r\n                            <GraphVisualisation\r\n                                data={myData}\r\n                                width={graphWidth}\r\n                            />\r\n                        </ReactCursorPosition>}\r\n                <div>\r\n                    <TabPanel index={0} value={tabValue}>\r\n                        <Paper style={{overflow: \"auto\", maxHeight: window.innerHeight}}>\r\n                            {/*<Typography>IDs</Typography>*/}\r\n                            {/*<List style={{overflow: \"auto\"}}>*/}\r\n                            {/*    {myData[\"nodes\"].map((item, i) => (*/}\r\n                            {/*        <ListItem>*/}\r\n                            {/*            <Typography>{item[\"id\"]}</Typography>*/}\r\n                            {/*        </ListItem>*/}\r\n                            {/*    ))}*/}\r\n                            {/*</List>*/}\r\n                        </Paper>\r\n                    </TabPanel>\r\n                    <TabPanel index={1} value={tabValue}>\r\n                        <WidgetBot\r\n                            server=\"717755444646379600\"\r\n                            channel=\"717835175635058816\"\r\n                            shard=\"https://e.widgetbot.io\"\r\n                            width={window.innerWidth - graphWidth}\r\n                            height={window.innerHeight}\r\n                        />\r\n                    </TabPanel>\r\n                    <TabPanel index={2} value={tabValue}>\r\n                        <FacebookProvider appId=\"657162925011369\" chatSupport>\r\n                            <Group\r\n                                href=\"https://www.facebook.com/groups/geneticbiohacking/\"\r\n                                width={window.innerWidth - graphWidth}\r\n                                showSocialContext={true}\r\n                                showMetaData={true}\r\n                                skin=\"light\"\r\n                            />\r\n                        </FacebookProvider>\r\n                    </TabPanel>\r\n                    <TabPanel index={3} value={tabValue}>\r\n                        <ScriptTag src=\"https://redditjs.com/subreddit.js\" />\r\n                        </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    rightGraphToolbar: {\r\n        marginLeft: 'auto'\r\n    }\r\n};\r\n\r\nexport default ViewKeywords;\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport PresentationPage from \"./components/pages/PresentationPage\";\r\nimport Home from \"./components/pages/Home\";\r\nimport ModalSearch from \"./components/pages/SearchModal\";\r\nimport ViewKeywords from \"./components/pages/Visualize\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    AppBar, Toolbar, Typography,\r\n} from '@material-ui/core';\r\nimport MainRouteIcon from \"./components/icons/MainRouteIcon\";\r\nimport AccountIcon from \"./components/icons/AccountIcon\";\r\nimport {SnackbarProvider} from 'notistack';\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n\r\n    const getMainAppBar = () => (\r\n        <AppBar\r\n            position=\"static\"\r\n            color=\"default\"\r\n        >\r\n            <Toolbar variant=\"dense\">\r\n                <MainRouteIcon/>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    BioSpace\r\n                </Typography>\r\n                <Switch>\r\n                    <Route path=\"/home\">\r\n                        <ModalSearch/>\r\n                    </Route>\r\n                </Switch>\r\n                <AccountIcon/>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n\r\n    return (\r\n        <SnackbarProvider maxSnack={3}>\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <Switch>\r\n                        <Route path=\"/home\">\r\n                            {getMainAppBar()}\r\n                            <Home/>\r\n                        </Route>\r\n                        <Route path=\"/s\">\r\n                            <ViewKeywords/>\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            {getMainAppBar()}\r\n                            <PresentationPage/>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </SnackbarProvider>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}