{"version":3,"sources":["components/pages/PresentationPage.js","components/res/urls.js","components/pages/Home.js","components/pages/SearchModal.js","components/marvel/data.js","components/icons/MainRouteIcon.js","components/icons/GraphViewIcon.js","components/pages/LoginModal.js","components/icons/AccountIcon.js","components/visualisations/GraphVisualisation.js","components/res/data.js","components/icons/TableViewIcon.js","components/visualisations/TableVisualisation.js","components/pages/Visualize.js","App.js","serviceWorker.js","index.js"],"names":["PresentationPage","props","localStorage","getItem","render","to","pathname","state","from","location","className","originalFetch","require","fetch","retries","retryDelay","getUrl","path","fetchUrl","url","json","callback","error","method","headers","body","JSON","stringify","then","response","data","catch","result","styles","list","flexWrap","transform","listItem","margin","maxWidth","rootList","display","justifyContent","Home","useState","lastAccessed","setLastAccessed","popular","setPopular","getSpaces","by","func","Object","keys","map","key","getPopular","inputArray","name","length","style","Typography","GridList","sort","a","b","item","i","GridListTile","src","GridListTileBar","title","actionIcon","IconButton","history","onClick","push","useEffect","icon","fontSize","checkedIcon","useStyles","makeStyles","theme","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","modal","alignItems","ModalSearch","closed","classes","React","open","setOpen","selected","setSelected","setKeys","parse","res","setItem","keywordsList","Array","console","log","count","slice","id","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","renderOption","Fragment","Checkbox","marginRight","checked","width","renderInput","params","TextField","variant","label","placeholder","onChange","event","value","d","Button","searchString","join","goToSpace","aria-label","aria-haspopup","color","Modal","onClose","aria-labelledby","aria-describedby","links","source","target","nodes","svg","size","symbolType","MainRouteIcon","home","anchorEl","setAnchorEl","handleClose","edge","aria-controls","currentTarget","Menu","keepMounted","Boolean","MenuItem","menuItemText","marginLeft","GraphViewIcon","setValue","handleClick","setVisualisation","val","showIcon","LoginModal","loggedIn","loginOrRegister","setLoginOrRegister","email","setEmail","password","setPassword","setName","logoutBody","FormControl","FormHelperText","removeItem","loginBody","InputLabel","htmlFor","Input","type","AccountIcon","anchorAccount","setAnchorAccount","handleAccountClose","GraphVisualisation","fgRef","useRef","useCallback","node","distRatio","Math","hypot","x","y","z","current","cameraPosition","ref","graphData","linkWidth","onNodeClick","fetchGraphData","space_id","setData","info","currentNode","startsWith","replace","relations","dst","convertToGraphData","filterByType","infoType","newData","filter","nodeInfo","TableViewIcon","paddingLeft","StyledTableCell","withStyles","head","common","black","white","TableCell","StyledTableRow","root","action","hover","TableRow","getPapersCellsFrom","row","component","scope","Link","href","align","getFieldsCellsFrom","getConnectionsCellsFrom","flexGrow","menuButton","breakpoints","up","search","position","borderRadius","shape","fade","searchIcon","height","pointerEvents","inputRoot","inputInput","transition","transitions","create","TableVisualisation","tableType","setTableType","tableCells","0","1","2","TableContainer","Paper","maxHeight","window","innerHeight","Grid","container","justify","xs","InputBase","input","inputProps","Table","stickyHeader","TableHead","header","TableBody","TabPanel","children","index","other","role","hidden","Box","a11yProps","rightGraphToolbar","ViewKeywords","decodeURI","split","myData","innerWidth","graphWidth","tabValue","setTabValue","graphViewValue","setGraphViewValue","AppBar","Toolbar","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","discordIcon","server","channel","shard","overflow","List","ListItem","App","getMainAppBar","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a27354b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nfunction PresentationPage(props) {\r\n    const loggedIn = localStorage.getItem(\"loggedIn\")\r\n    if (loggedIn) {\r\n        return (\r\n            <Route render={(props) => (\r\n                <Redirect to={{pathname: \"/home\", state: {from: props.location}}} />\r\n            )}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <p>Welcome to BioSpace!</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PresentationPage;\r\n","import React from \"react\";\r\n\r\nconst originalFetch = require('isomorphic-fetch');\r\nconst fetch = require('fetch-retry')(originalFetch, {\r\n    retries: 5,\r\n    retryDelay: 1000\r\n});\r\n\r\nexport const SITE = \"/\"\r\n\r\nexport const getUrl = (path) => {\r\n    return SITE + path\r\n}\r\n\r\nexport function fetchUrl(url, json, callback, error=null, method=\"post\") {\r\n    if (method === \"get\") {\r\n        fetch(\r\n            getUrl(url))\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                callback(data)\r\n            })\r\n            .catch((result) => {\r\n                if(error) {\r\n                    error(result)\r\n                }\r\n            })\r\n        return;\r\n    }\r\n    fetch(\r\n        getUrl(url), {\r\n            method: method,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(json)\r\n        })\r\n        .then(function (response) {\r\n            return response.json()\r\n        })\r\n        .then(function (data) {\r\n            callback(data)\r\n        })\r\n        .catch((result) => {\r\n            if(error) {\r\n                error(result)\r\n            }\r\n        })\r\n}\r\n","import React, {useDebugValue, useEffect, useState} from 'react';\r\nimport {fetchUrl} from \"../res/urls\";\r\nimport {\r\n    Box, Typography,\r\n    Grid, GridList, GridListTile, GridListTileBar, IconButton\r\n} from \"@material-ui/core\";\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\nimport {Route} from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    const [lastAccessed, setLastAccessed] = useState([]);\r\n    const [popular, setPopular] = useState([]);\r\n\r\n    function getSpaces(by, func) {\r\n        fetchUrl(\"get_spaces\", {\r\n            \"by\": by\r\n        }, (data) => {\r\n            data = Object.keys(data).map((key) => data[key]);\r\n            func(data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n            getSpaces(\"popularity\", setPopular)\r\n            getSpaces(\"accessed\", setLastAccessed)\r\n        }, []\r\n    )\r\n\r\n    function getPopular(inputArray, name, keys) {\r\n        if (!inputArray.length) {\r\n            return null;\r\n        }\r\n        return <div style={{margin: 10}}>\r\n            <Typography>{name}</Typography>\r\n            <div style={styles.rootList}>\r\n                <GridList style={styles.list}>\r\n                    {inputArray\r\n                        .sort((a, b) => a[keys] < b[keys] ? 1 : -1)\r\n                        .map((item, i) => (\r\n                            <GridListTile\r\n                                style={styles.listItem}\r\n                            >\r\n                                <img\r\n                                    src=\"https://i.pinimg.com/originals/d9/f7/05/d9f70593f3d861704c83c34faff90705.png\"/>\r\n                                <GridListTileBar\r\n                                    title={item[\"id\"]}\r\n                                    actionIcon={\r\n                                        <IconButton>\r\n                                            <Route render={({history}) => (\r\n                                                <OpenInBrowserIcon\r\n                                                    onClick={() => {\r\n                                                        history.push('/s/' + item['id'])\r\n                                                    }}\r\n                                                >\r\n                                                    Open\r\n                                                </OpenInBrowserIcon>\r\n                                            )}/>\r\n                                        </IconButton>\r\n                                    }\r\n                                />\r\n                            </GridListTile>\r\n                        ))}\r\n                </GridList>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            {getPopular(popular, \"Popular\", \"popularity\")}\r\n            {getPopular(lastAccessed, \"Recent\", \"accessed\")}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    list: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)'\r\n    },\r\n    listItem: {\r\n        margin: 5,\r\n        maxWidth: 200\r\n    },\r\n    rootList: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around'\r\n    }\r\n};\r\n\r\nexport default Home;\r\n","import React, {useEffect} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {Button, Checkbox, TextField, IconButton} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {getUrl} from \"../res/urls\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\"/>;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\"/>;\r\nconst myKeys = [\r\n    {key: 'bioinformatics', count: 100},\r\n    {key: 'biomaterial', count: 100},\r\n    {key: 'tissue engineering', count: 100},\r\n    {key: 'biotechnology', count: 100},\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 10, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\n\r\nfunction ModalSearch({closed = true}) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(!closed);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [keys, setKeys] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        let keys = JSON.parse(localStorage.getItem(\"keywordsList\") || \"[]\");\r\n        if (!keys.length) {\r\n            keys = fetch(getUrl(\"graph/keywords\"))\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    localStorage.setItem(\"keywordsDict\", JSON.stringify(data[\"info\"]));\r\n                    let keywordsList = Array();\r\n                    for (let key in data[\"info\"]) {\r\n                        keywordsList.push({\"key\": key, \"count\": data[\"info\"][key]})\r\n                    }\r\n                    keys = keywordsList;\r\n                    localStorage.setItem(\"keywordsList\", JSON.stringify(keywordsList));\r\n                })\r\n                .catch(console.log)\r\n        }\r\n        keys = keys.sort((a, b) => (a.count < b.count) ? 1 : -1);\r\n        keys = keys.slice(0, 1000);\r\n        setKeys(keys);\r\n        }, []\r\n    )\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const goToSpace = ({history, searchString}) => {\r\n        fetch(\r\n            getUrl(\"space\"), {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"keys\": searchString,\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                if (data['id']) {\r\n                    history.push('/s/' + data['id'])\r\n                }\r\n            })\r\n    };\r\n\r\n    const body = (\r\n        <div className={classes.paper}>\r\n            <p id=\"simple-modal-description\">\r\n                Pick keywords\r\n            </p>\r\n            <Autocomplete\r\n                multiple\r\n                id=\"keywords-select\"\r\n                options={keys}\r\n                disableCloseOnSelect\r\n                getOptionLabel={(option) => option.key}\r\n                renderOption={(option, {selected}) => (\r\n                    <React.Fragment>\r\n                        <Checkbox\r\n                            icon={icon}\r\n                            checkedIcon={checkedIcon}\r\n                            style={{marginRight: 8}}\r\n                            checked={selected}\r\n                        />\r\n                        {option.key}\r\n                    </React.Fragment>\r\n                )}\r\n                style={{width: 500}}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Keywords\" placeholder=\"Bio\"/>\r\n                )}\r\n                onChange={(event, value) => {\r\n                    setSelected(value.map((d) => d.key).sort())\r\n                }}\r\n            />\r\n            <Route render={({history}) => (\r\n                <Button\r\n                    onClick={() => {\r\n                        const searchString = selected.join(',');\r\n                        goToSpace({history, searchString});\r\n                    }}\r\n                >\r\n                    Search\r\n                </Button>\r\n            )}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpen}\r\n                color=\"inherit\"\r\n            >\r\n                <SearchIcon />\r\n            </IconButton>\r\n            {/*<Button onClick={handleOpen}>*/}\r\n            {/*    Search*/}\r\n            {/*</Button>*/}\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                className={classes.modal}\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalSearch;\r\n","// only with pure configuration it's easy to replicate graphs such as\r\n// http://bl.ocks.org/eesur/be2abfb3155a38be4de4 using react-d3-graph\r\nimport React from \"react\";;\r\n\r\nconst data = {\r\n    links: [\r\n        // Groups\r\n        {\r\n            source: \"Marvel\",\r\n            target: \"Heroes\",\r\n        },\r\n        {\r\n            source: \"Marvel\",\r\n            target: \"Villains\",\r\n        },\r\n        {\r\n            source: \"Marvel\",\r\n            target: \"Teams\",\r\n        },\r\n        // Heroes\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Spider-Man\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"CAPTAIN MARVEL\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"HULK\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Black Widow\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Daredevil\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Wolverine\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Captain America\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Iron Man\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"THOR\",\r\n        },\r\n        // Villains\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Dr. Doom\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Mystique\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Red Skull\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Ronan\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Magneto\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Thanos\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Black Cat\",\r\n        },\r\n        // Teams\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Avengers\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Guardians of the Galaxy\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Defenders\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"X-Men\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Fantastic Four\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Inhumans\",\r\n        },\r\n    ],\r\n    nodes: [\r\n        // Groups\r\n        {\r\n            id: \"Marvel\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/marvel.png\",\r\n            size: 500,\r\n            fontSize: 18,\r\n        },\r\n        {\r\n            id: \"Heroes\",\r\n            symbolType: \"circle\",\r\n            color: \"red\",\r\n            size: 300,\r\n        },\r\n        {\r\n            id: \"Villains\",\r\n            symbolType: \"circle\",\r\n            color: \"red\",\r\n            size: 300,\r\n        },\r\n        {\r\n            id: \"Teams\",\r\n            symbolType: \"circle\",\r\n            color: \"red\",\r\n            size: 300,\r\n        },\r\n        // Heroes\r\n        {\r\n            id: \"Spider-Man\",\r\n            name: \"Peter Benjamin Parker\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_spiderman.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"CAPTAIN MARVEL\",\r\n            name: \"Carol Danvers\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_captainmarvel.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"HULK\",\r\n            name: \"Robert Bruce Banner\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_hulk.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Black Widow\",\r\n            name: \"Natasha Alianovna Romanova\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_blackwidow.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Daredevil\",\r\n            name: \"Matthew Michael Murdock\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_daredevil.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Wolverine\",\r\n            name: \"James Howlett\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_wolverine.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Captain America\",\r\n            name: \"Steven Rogers\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_captainamerica.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Iron Man\",\r\n            name: \"Tony Stark\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_ironman.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"THOR\",\r\n            name: \"Thor Odinson\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_thor.png\",\r\n            size: 400,\r\n        },\r\n        // Villains\r\n        {\r\n            id: \"Dr. Doom\",\r\n            name: \"Victor von Doom\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/drdoom.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Mystique\",\r\n            name: \"Unrevealed\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/mystique.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Red Skull\",\r\n            name: \"Johann Shmidt\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/redskull.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Ronan\",\r\n            name: \"Ronan\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/ronan.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Magneto\",\r\n            name: \"Max Eisenhardt\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/magneto.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Thanos\",\r\n            name: \"Thanos\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/thanos.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Black Cat\",\r\n            name: \"Felicia Hardy\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/blackcat.png\",\r\n            size: 400,\r\n        },\r\n        // Teams\r\n        {\r\n            id: \"Avengers\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/avengers.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Guardians of the Galaxy\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/gofgalaxy.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Defenders\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/defenders.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"X-Men\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/xmen.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Fantastic Four\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/fantasticfour.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Inhumans\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/inhumans.png\",\r\n            size: 400,\r\n        },\r\n    ],\r\n};\r\n\r\nexport default data;\r\n","import React, {useState} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport {\r\n    Toolbar, Menu, MenuItem, IconButton\r\n} from \"@material-ui/core\";\r\n\r\nfunction MainRouteIcon ({home=false, className=\"\"}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton edge=\"start\" className={className} color=\"inherit\" aria-label=\"menu\"\r\n                        aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                <DonutLargeIcon/>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={handleClose}>\r\n                    <Link to=\"/\">Root</Link>\r\n                </MenuItem>\r\n                {home ? <MenuItem onClick={handleClose}>\r\n                    <Link to=\"/home\">Home</Link>\r\n                </MenuItem> : null}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainRouteIcon;\r\n","import React, {useState} from 'react';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport MultilineChartIcon from '@material-ui/icons/MultilineChart';\r\nimport TableChartRoundedIcon from '@material-ui/icons/TableChartRounded';\r\nimport {\r\n    Menu, MenuItem, IconButton, Typography\r\n} from \"@material-ui/core\";\r\n\r\nfunction GraphViewIcon({value, setValue}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function setVisualisation(val) {\r\n        handleClose()\r\n        setValue(val)\r\n    }\r\n\r\n    const showIcon = (name=null) => {\r\n        return <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\r\n                           aria-controls=\"bubble-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n            {\r\n                value === 1 ? <TableChartRoundedIcon /> : value === 2 ? <MultilineChartIcon /> : <BubbleChartIcon />\r\n            }\r\n            {\r\n                name ? value === 1 ? \"table\" : value === 2 ? \"chart\" : \"graph\" : null\r\n            }\r\n        </IconButton>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showIcon()}\r\n            <Menu\r\n                id=\"bubble-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {value !== 0 ? <MenuItem onClick={() => {setVisualisation(0)}}>\r\n                    <BubbleChartIcon/>\r\n                    <Typography style={styles.menuItemText}>Graph</Typography>\r\n                </MenuItem> : null}\r\n                {value !== 1 ? <MenuItem onClick={() => {setVisualisation(1)}}>\r\n                    <TableChartRoundedIcon/>\r\n                    <Typography style={styles.menuItemText}>Table</Typography>\r\n                </MenuItem> : null}\r\n                {value !== 2 ? <MenuItem onClick={() => {setVisualisation(2)}}>\r\n                    <MultilineChartIcon/>\r\n                    <Typography style={styles.menuItemText}>Chart</Typography>\r\n                </MenuItem> : null}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    menuItemText: {\r\n        marginLeft: 3\r\n    }\r\n};\r\n\r\nexport default GraphViewIcon;\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {getUrl} from \"../res/urls\";\r\nimport {\r\n    Button, Checkbox, TextField,\r\n    FormHelperText, InputLabel, Input, FormControl\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 10, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\n\r\nfunction LoginModal({closed = true}) {\r\n    const loggedIn = localStorage.getItem(\"loggedIn\");\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(!closed);\r\n    // true to login, false to register\r\n    const [loginOrRegister, setLoginOrRegister] = React.useState(true);\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [name, setName] = React.useState(\"\");\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const switchLoginOrRegister = () => {\r\n        setLoginOrRegister(!loginOrRegister);\r\n    };\r\n\r\n    const doLogin = () => {\r\n        fetch(\r\n            getUrl(\"users/login\"), {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": password\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                if (data[\"email\"] === email) {\r\n                    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n                    localStorage.setItem(\"loggedIn\", \"true\")\r\n                    setOpen(false)\r\n                }\r\n            })\r\n    };\r\n\r\n    const doRegister = () => {\r\n        fetch(\r\n            getUrl(\"users/register\"), {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": password,\r\n                    \"name\": name\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                if (data[\"email\"] === email) {\r\n                    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n                    localStorage.setItem(\"loggedIn\", \"true\")\r\n                    setOpen(false)\r\n                }\r\n            })\r\n    };\r\n\r\n    const logoutBody = (\r\n        <div className={classes.paper}>\r\n            <FormControl>\r\n                <FormHelperText>Are you sure you want to logout?</FormHelperText>\r\n                <Route render={({history}) => (\r\n                    <Button onClick={() => {\r\n                        localStorage.removeItem(\"loggedIn\")\r\n                        setOpen(false)\r\n                        history.push('/')\r\n                    }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                )}/>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n    const loginBody = (\r\n        <div className={classes.paper}>\r\n            <FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"email\">Email address</InputLabel>\r\n                    <Input id=\"email\" type=\"email\" aria-describedby=\"Enter institution email address\"\r\n                           onChange={(event) => {\r\n                               setEmail(event.target.value)\r\n                           }}\r\n                    />\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"pass\">Password</InputLabel>\r\n                    <Input id=\"pass\" type=\"password\" aria-describedby=\"Enter password\"\r\n                           onChange={(event) => {\r\n                               setPassword(event.target.value)\r\n                           }}/>\r\n                </FormControl>\r\n                {\r\n                    !loginOrRegister ? <FormControl>\r\n                        <InputLabel htmlFor=\"name\">Full name</InputLabel>\r\n                        <Input id=\"name\" aria-describedby=\"Enter full name\"\r\n                               onChange={(event) => {\r\n                                   setName(event.target.value)\r\n                               }}/>\r\n                    </FormControl> : null\r\n                }\r\n                <FormControl>\r\n                    <FormHelperText onClick={switchLoginOrRegister}>\r\n                        {\r\n                            loginOrRegister ? \"Don't have an account? Click here to register..\" : \"I have an account, click here to login..\"\r\n                        }\r\n                    </FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Button onClick={loginOrRegister ? doLogin : doRegister}>{\r\n                        loginOrRegister ? \"Login\" : \"Register\"\r\n                    }</Button>\r\n                </FormControl>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <text onClick={handleOpen}>{!loggedIn ? \"Login\" : \"Logout\"}</text>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"login-modal-title\"\r\n                aria-describedby=\"login-modal-description\"\r\n                className={classes.modal}\r\n            >\r\n                {loggedIn ? logoutBody : loginBody}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginModal;\r\n","import React, {useState} from 'react';\r\nimport LoginModal from \"../pages/LoginModal\";\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport {\r\n    Menu, MenuItem, IconButton, Typography, Toolbar\r\n} from \"@material-ui/core\";\r\n\r\nfunction AccountIcon({value, setValue}) {\r\n    const [anchorAccount, setAnchorAccount] = React.useState(null);\r\n    const handleAccountClick = (event) => {\r\n        setAnchorAccount(event.currentTarget);\r\n    };\r\n\r\n    const handleAccountClose = () => {\r\n        setAnchorAccount(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"account-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleAccountClick}\r\n                color=\"inherit\"\r\n            >\r\n                <AccountCircle/>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"account-menu\"\r\n                anchorEl={anchorAccount}\r\n                keepMounted\r\n                open={Boolean(anchorAccount)}\r\n                onClose={handleAccountClose}\r\n            >\r\n                <MenuItem onClick={handleAccountClose}>\r\n                    <LoginModal/>\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountIcon;\r\n","import React, {useEffect, useState, useCallback, useRef} from 'react';\r\nimport {ForceGraph3D} from \"react-force-graph\";\r\n\r\nfunction GraphVisualisation({data, width=500}) {\r\n    const fgRef = useRef();\r\n\r\n    const handleClick = useCallback(node => {\r\n        // Aim at node from outside it\r\n        const distance = 40;\r\n        const distRatio = 1 + distance/Math.hypot(node.x, node.y, node.z);\r\n\r\n        fgRef.current.cameraPosition(\r\n            { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }, // new position\r\n            node, // lookAt ({ x, y, z })\r\n            3000  // ms transition duration\r\n        );\r\n    }, [fgRef]);\r\n\r\n    return (\r\n        <ForceGraph3D\r\n            ref={fgRef}\r\n            graphData={data}\r\n            linkWidth={2}\r\n            width={width}\r\n            onNodeClick={handleClick}\r\n            />\r\n    );\r\n}\r\n\r\nconst styles = {\r\n\r\n};\r\n\r\nexport default GraphVisualisation;\r\n","import React from \"react\";\r\nimport {fetchUrl} from \"./urls\";\r\n\r\n\r\nexport function convertToGraphData(info) {\r\n    let nodes = Array();\r\n    for (let key in info[\"nodes\"]) {\r\n        let currentNode = info[\"nodes\"][key];\r\n        if(currentNode[\"type\"] === \"paper\") {\r\n            currentNode[\"url\"] = currentNode[\"id\"]\r\n            if (currentNode[\"url\"].startsWith(\"doi:/\")) {\r\n                currentNode[\"url\"] = currentNode[\"url\"].replace(\"doi:/\", \"https://doi.org\")\r\n            }\r\n            else if (currentNode[\"url\"].startsWith(\"pubmed:/\")) {\r\n                currentNode[\"url\"] = currentNode[\"url\"].replace('pubmed:/', 'https://pubmed.ncbi.nlm.nih.gov')\r\n            }\r\n        }\r\n        currentNode[\"name\"] = currentNode[\"id\"];\r\n        nodes.push(currentNode);\r\n    }\r\n    let relations = Array();\r\n    for (let dst in info[\"relationships\"]) {\r\n        for (let src in info[\"relationships\"][dst]) {\r\n            relations.push({\r\n                source: src,\r\n                target: dst,\r\n                type: info[\"relationships\"][dst][src]\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        links: relations,\r\n        nodes: nodes\r\n    }\r\n}\r\n\r\nexport function fetchGraphData(space_id, setData) {\r\n    fetchUrl(\"space\", {\r\n        \"id\": space_id\r\n    }, (data) => {\r\n        const keys = data['keys']\r\n        fetchUrl(\"graph/sub?keys=\" + keys, null, (info) => {\r\n            info = info[\"info\"];\r\n            setData(convertToGraphData(info));\r\n        }, null, \"get\")\r\n    })\r\n}\r\n\r\nexport function filterByType(data, infoType) {\r\n    if (infoType === 0) {\r\n        infoType = \"paper\"\r\n    } else if (infoType === 1) {\r\n        infoType = \"field\"\r\n    } else if (infoType === 2) {\r\n        infoType = \"connections\"\r\n    }\r\n    let newData = JSON.parse(JSON.stringify(data));\r\n    newData[\"nodes\"] = newData[\"nodes\"].filter(nodeInfo => nodeInfo[\"type\"] === infoType)\r\n    return newData;\r\n}\r\n","import React, {useState} from 'react';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport {\r\n    Menu, MenuItem, IconButton, Typography\r\n} from \"@material-ui/core\";\r\n\r\nfunction TableViewIcon({value, setValue}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function setVisualisation(val) {\r\n        handleClose()\r\n        setValue(val)\r\n    }\r\n\r\n    const showIcon = (name=null) => {\r\n        return <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\r\n                           aria-controls=\"table-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n            {\r\n                value === 1 ? (<TextFieldsIcon />) : value === 2 ? <SettingsEthernetIcon /> : <InsertDriveFileIcon />\r\n            }\r\n            {\r\n                name ? value === 1 ? \"table\" : value === 2 ? \"chart\" : \"graph\" : null\r\n            }\r\n        </IconButton>\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingLeft: 10}}>\r\n            {showIcon()}\r\n            <Menu\r\n                id=\"table-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {value !== 0 ? <MenuItem onClick={() => {setVisualisation(0)}}>\r\n                    <InsertDriveFileIcon/>\r\n                    <Typography style={styles.menuItemText}>Papers</Typography>\r\n                </MenuItem> : null}\r\n                {value !== 1 ? <MenuItem onClick={() => {setVisualisation(1)}}>\r\n                    <TextFieldsIcon/>\r\n                    <Typography style={styles.menuItemText}>Fields</Typography>\r\n                </MenuItem> : null}\r\n                {value !== 2 ? <MenuItem onClick={() => {setVisualisation(2)}}>\r\n                    <SettingsEthernetIcon/>\r\n                    <Typography style={styles.menuItemText}>Connections</Typography>\r\n                </MenuItem> : null}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    menuItemText: {\r\n        marginLeft: 5\r\n    }\r\n};\r\n\r\nexport default TableViewIcon;\r\n","import React, {useEffect, useState, useCallback, useRef} from 'react';\r\nimport {withStyles, makeStyles, fade} from '@material-ui/core/styles';\r\nimport {\r\n    Table, TableBody, TableCell,\r\n    TableRow, TableHead, TableContainer,\r\n    Paper, Typography, Grid, InputBase, Link\r\n} from \"@material-ui/core\";\r\nimport {filterByType} from \"../res/data\";\r\nimport TableViewIcon from \"../icons/TableViewIcon\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction getPapersCellsFrom(data) {\r\n    return filterByType(data, \"paper\")[\"nodes\"].map((row) => (\r\n        <StyledTableRow key={row.id}>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n                <Link href={row.url} target=\"_blank\">\r\n                    {row.id}\r\n                </Link>\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">-</StyledTableCell>\r\n            <StyledTableCell align=\"right\">{row.y}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">-</StyledTableCell>\r\n        </StyledTableRow>\r\n    ))\r\n}\r\n\r\nfunction getFieldsCellsFrom(data) {\r\n    console.log(data);\r\n    return filterByType(data, \"field\")[\"nodes\"].map((row) => (\r\n        <StyledTableRow key={row.id}>\r\n            <StyledTableCell component=\"th\" scope=\"row\">{row.id}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">{(data[\"links\"] || []).filter(item => item[\"target\"] == row.id).length}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">-</StyledTableCell>\r\n        </StyledTableRow>\r\n    ))\r\n}\r\n\r\nfunction getConnectionsCellsFrom(data) {\r\n\r\n}\r\n\r\nfunction TableVisualisation({data, width = 500}) {\r\n    const classes = useStyles();\r\n    const [tableType, setTableType] = useState(0);\r\n\r\n    const headerNames = {\r\n        0 : [[\"Id\", {}], [\"Title\", {align: \"right\"}],\r\n            [\"Date\", {align: \"right\"}], [\"Opt\", {align: \"right\"}]],\r\n        1: [[\"Name\", {}], [\"Connections\", {align: \"right\"}], [\"Opt\", {align: \"right\"}]],\r\n        2: [[\"From\", {}], [\"Name\", {}], [\"To\", {}]]\r\n    };\r\n\r\n    const tableCells = {\r\n        0: getPapersCellsFrom,\r\n        1: getFieldsCellsFrom,\r\n        2: getConnectionsCellsFrom\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper} style={{width: width, maxHeight: window.innerHeight}}>\r\n            <Grid container\r\n                  spacing={3}\r\n                  justify={\"space-between\"}\r\n                  alignItems={\"center\"}\r\n            >\r\n                <Grid item xs={3}>\r\n                    <TableViewIcon\r\n                        value={tableType}\r\n                        setValue={setTableType}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Table stickyHeader aria-label=\"data-table\">\r\n                <TableHead>\r\n                    {headerNames[tableType].map((header) => (\r\n                        <StyledTableCell align={header[1][\"align\"]}>{header[0]}</StyledTableCell>\r\n                    ))}\r\n                </TableHead>\r\n                <TableBody>\r\n                    {tableCells[tableType](data)}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nexport default TableVisualisation;\r\n","import React, {useEffect, useState} from 'react';\r\nimport data from '../marvel/data';\r\nimport WidgetBot from \"@widgetbot/react-embed\";\r\nimport {getUrl} from \"../res/urls\";\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    AppBar, Toolbar, Tabs,\r\n    IconButton, Tab, Box, Typography\r\n} from \"@material-ui/core\";\r\nimport {\r\n    List, ListItem, Paper\r\n} from \"@material-ui/core\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {FaDiscord} from \"react-icons/all\";\r\nimport {Icon, InlineIcon} from '@iconify/react';\r\nimport discordIcon from '@iconify/icons-simple-icons/discord';\r\nimport MainRouteIcon from \"../icons/MainRouteIcon\";\r\nimport GraphViewIcon from \"../icons/GraphViewIcon\";\r\nimport AccountIcon from \"../icons/AccountIcon\";\r\nimport GraphVisualisation from \"../visualisations/GraphVisualisation\";\r\nimport TableVisualisation from \"../visualisations/TableVisualisation\";\r\nimport {fetchGraphData, convertToGraphData} from \"../res/data\";\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nfunction ViewKeywords(props) {\r\n    const space_id = decodeURI(window.location.href).split('/s/')[1];\r\n    const [myData, setData] = useState(data);\r\n    const [graphWidth, setGraphWidth] = useState(window.innerWidth / 3 * 2 - 10);\r\n\r\n    const [tabValue, setTabValue] = useState(0);\r\n\r\n    const [graphViewValue, setGraphViewValue] = useState(1);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchGraphData(space_id, setData)\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display: \"flex\"}}>\r\n                <AppBar\r\n                    position=\"static\"\r\n                    color=\"default\"\r\n                    style={{width: graphWidth}}>\r\n                    <Toolbar variant=\"dense\">\r\n                        <MainRouteIcon home/>\r\n                        <GraphViewIcon value={graphViewValue} setValue={setGraphViewValue}/>\r\n                        <div style={styles.rightGraphToolbar}>\r\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                                <FilterListIcon/>\r\n                            </IconButton>\r\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                                <SearchIcon/>\r\n                            </IconButton>\r\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                                <AddCircleOutlineIcon/>\r\n                            </IconButton>\r\n                        </div>\r\n                        <AccountIcon/>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <AppBar\r\n                    position=\"static\"\r\n                    color=\"default\"\r\n                    style={{width: window.innerWidth - graphWidth}}>\r\n                    <Tabs\r\n                        value={tabValue}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        <Tab label={<Icon icon={discordIcon}/>} {...a11yProps(0)} />\r\n                        <Tab label=\"Item Two\" {...a11yProps(1)} />\r\n                        <Tab label=\"Item Three\" {...a11yProps(2)} />\r\n                        <Tab label=\"Item Four\" {...a11yProps(3)} />\r\n                        <Tab label=\"Item Five\" {...a11yProps(4)} />\r\n                        <Tab label=\"Item Six\" {...a11yProps(5)} />\r\n                        <Tab label=\"Item Seven\" {...a11yProps(6)} />\r\n                    </Tabs>\r\n                </AppBar>\r\n            </div>\r\n            <div style={{display: \"flex\"}}>\r\n                {graphViewValue === 1 ? <TableVisualisation\r\n                        data={myData}\r\n                        width={graphWidth}\r\n                    /> :\r\n                    graphViewValue === 2 ? <Typography>Chart</Typography> :\r\n                        <GraphVisualisation\r\n                            data={myData}\r\n                            width={graphWidth}\r\n                        />}\r\n                <div>\r\n                    <TabPanel index={0} value={tabValue}>\r\n                        <WidgetBot\r\n                            server=\"717755444646379600\"\r\n                            channel=\"717835175635058816\"\r\n                            shard=\"https://e.widgetbot.io\"\r\n                            width={window.innerWidth - graphWidth}\r\n                            height={window.innerHeight}\r\n                        />\r\n                    </TabPanel>\r\n                    <TabPanel index={1} value={tabValue}>\r\n                        <Paper style={{overflow: \"auto\", maxHeight: window.innerHeight}}>\r\n                            <Typography>IDs</Typography>\r\n                            <List style={{overflow: \"auto\"}}>\r\n                                {myData[\"nodes\"].map((item, i) => (\r\n                                    <ListItem>\r\n                                        <Typography>{item[\"id\"]}</Typography>\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </Paper>\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    rightGraphToolbar: {\r\n        marginLeft: 'auto'\r\n    }\r\n};\r\n\r\nexport default ViewKeywords;\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport PresentationPage from \"./components/pages/PresentationPage\";\r\nimport Home from \"./components/pages/Home\";\r\nimport ModalSearch from \"./components/pages/SearchModal\";\r\nimport ViewKeywords from \"./components/pages/Visualize\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    AppBar, Toolbar, Typography,\r\n} from '@material-ui/core';\r\nimport MainRouteIcon from \"./components/icons/MainRouteIcon\";\r\nimport AccountIcon from \"./components/icons/AccountIcon\";\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n\r\n    const getMainAppBar = () => (\r\n        <AppBar\r\n            position=\"static\"\r\n            color=\"default\"\r\n        >\r\n            <Toolbar variant=\"dense\">\r\n                <MainRouteIcon />\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    BioSpace\r\n                </Typography>\r\n                <Switch>\r\n                    <Route path=\"/home\">\r\n                        <ModalSearch/>\r\n                    </Route>\r\n                </Switch>\r\n                <AccountIcon />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <Route path=\"/home\">\r\n                        {getMainAppBar()}\r\n                        <Home/>\r\n                    </Route>\r\n                    <Route path=\"/s\">\r\n                        <ViewKeywords/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        {getMainAppBar()}\r\n                        <PresentationPage />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}