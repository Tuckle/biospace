{"version":3,"sources":["logo.svg","components/pages/PresentationPage.js","components/pages/Home.js","components/res/urls.js","components/pages/SearchModal.js","components/pages/LoginModal.js","components/marvel/data.js","components/pages/Visualize.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PresentationPage","props","localStorage","getItem","render","to","pathname","state","from","location","className","Home","Button","variant","getUrl","path","icon","fontSize","checkedIcon","useStyles","makeStyles","theme","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","modal","display","alignItems","justifyContent","ModalSearch","closed","classes","React","useState","open","setOpen","selected","setSelected","keys","JSON","parse","length","fetch","then","res","json","data","setItem","stringify","keywordsList","Array","key","push","catch","console","log","sort","a","b","count","slice","body","id","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","renderOption","Fragment","Checkbox","style","marginRight","checked","width","renderInput","params","TextField","label","placeholder","onChange","event","value","map","d","history","onClick","searchString","join","method","headers","response","goToSpace","Modal","onClose","aria-labelledby","aria-describedby","LoginModal","loggedIn","loginOrRegister","setLoginOrRegister","email","setEmail","password","setPassword","name","setName","logoutBody","FormControl","FormHelperText","removeItem","loginBody","InputLabel","htmlFor","Input","type","target","links","source","nodes","svg","size","symbolType","color","ViewKeywords","space_id","decodeURI","window","href","split","myData","setData","innerWidth","graphWidth","useEffect","info","currentNode","relations","dst","src","graphData","linkWidth","server","channel","shard","root","flexGrow","menuButton","title","App","anchorEl","setAnchorEl","handleClose","AppBar","position","Toolbar","IconButton","edge","aria-label","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","MenuItem","Typography","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65ef4952.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nfunction PresentationPage(props) {\r\n    const loggedIn = localStorage.getItem(\"loggedIn\")\r\n    if (loggedIn) {\r\n        return (\r\n            <Route render={(props) => (\r\n                <Redirect to={{pathname: \"/home\", state: {from: props.location}}} />\r\n            )}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <p>Welcome to BioSpace!</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PresentationPage;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"Home\">\r\n            <p>This would be my home page</p>\r\n            <Button variant=\"outlined\">click home</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","\r\nexport const SITE = \"/\"\r\n\r\nexport const getUrl = (path) => {\r\n    return SITE + path\r\n}\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {Button, Checkbox, TextField} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport {getUrl} from \"../res/urls\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\"/>;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\"/>;\r\nconst myKeys = [\r\n    {key: 'bioinformatics', count: 100},\r\n    {key: 'biomaterial', count: 100},\r\n    {key: 'tissue engineering', count: 100},\r\n    {key: 'biotechnology', count: 100},\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 10, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\n\r\nfunction ModalSearch({closed = true}) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(!closed);\r\n    const [selected, setSelected] = React.useState([]);\r\n\r\n    let keys = JSON.parse(localStorage.getItem(\"keywordsList\") || \"[]\");\r\n    if (!keys.length) {\r\n        keys = fetch(getUrl(\"graph/keywords\"))\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                localStorage.setItem(\"keywordsDict\", JSON.stringify(data[\"info\"]));\r\n                let keywordsList = Array();\r\n                for (let key in data[\"info\"]) {\r\n                    keywordsList.push({\"key\": key, \"count\": data[\"info\"][key]})\r\n                }\r\n                keys = keywordsList;\r\n                localStorage.setItem(\"keywordsList\", JSON.stringify(keywordsList));\r\n            })\r\n            .catch(console.log)\r\n    }\r\n    keys = keys.sort((a, b) => (a.count < b.count) ? 1 : -1);\r\n    keys = keys.slice(0, 1000);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const goToSpace = ({history, searchString}) => {\r\n        fetch(\r\n            getUrl(\"space\"), {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"keys\": searchString,\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                if (data['id']) {\r\n                    history.push('/s/' + data['id'])\r\n                }\r\n            })\r\n    };\r\n\r\n    const body = (\r\n        <div className={classes.paper}>\r\n            <p id=\"simple-modal-description\">\r\n                Pick keywords\r\n            </p>\r\n            <Autocomplete\r\n                multiple\r\n                id=\"keywords-select\"\r\n                options={keys}\r\n                disableCloseOnSelect\r\n                getOptionLabel={(option) => option.key}\r\n                renderOption={(option, {selected}) => (\r\n                    <React.Fragment>\r\n                        <Checkbox\r\n                            icon={icon}\r\n                            checkedIcon={checkedIcon}\r\n                            style={{marginRight: 8}}\r\n                            checked={selected}\r\n                        />\r\n                        {option.key}\r\n                    </React.Fragment>\r\n                )}\r\n                style={{width: 500}}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Keywords\" placeholder=\"Bio\"/>\r\n                )}\r\n                onChange={(event, value) => {\r\n                    setSelected(value.map((d) => d.key).sort())\r\n                }}\r\n            />\r\n            <Route render={({history}) => (\r\n                <Button\r\n                    onClick={() => {\r\n                        const searchString = selected.join(',');\r\n                        goToSpace({history, searchString});\r\n                    }}\r\n                >\r\n                    Search\r\n                </Button>\r\n            )}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleOpen}>\r\n                Search\r\n            </Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                className={classes.modal}\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalSearch;\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {getUrl} from \"../res/urls\";\r\nimport {\r\n    Button, Checkbox, TextField,\r\n    FormHelperText, InputLabel, Input, FormControl\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 10, 3),\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\n\r\nfunction LoginModal({closed = true}) {\r\n    const loggedIn = localStorage.getItem(\"loggedIn\");\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(!closed);\r\n    // true to login, false to register\r\n    const [loginOrRegister, setLoginOrRegister] = React.useState(true);\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [name, setName] = React.useState(\"\");\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const switchLoginOrRegister = () => {\r\n        setLoginOrRegister(!loginOrRegister);\r\n    };\r\n\r\n    const doLogin = () => {\r\n        fetch(\r\n            getUrl(\"users/login\"), {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": password\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                if (data[\"email\"] === email) {\r\n                    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n                    localStorage.setItem(\"loggedIn\", \"true\")\r\n                    setOpen(false)\r\n                }\r\n            })\r\n    };\r\n\r\n    const doRegister = () => {\r\n        fetch(\r\n            getUrl(\"users/register\"), {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": password,\r\n                    \"name\": name\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                if (data[\"email\"] === email) {\r\n                    localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n                    localStorage.setItem(\"loggedIn\", \"true\")\r\n                    setOpen(false)\r\n                }\r\n            })\r\n    };\r\n\r\n    const logoutBody = (\r\n        <div className={classes.paper}>\r\n            <FormControl>\r\n                <FormHelperText>Are you sure you want to logout?</FormHelperText>\r\n                <Route render={({history}) => (\r\n                    <Button onClick={() => {\r\n                        localStorage.removeItem(\"loggedIn\")\r\n                        setOpen(false)\r\n                        history.push('/')\r\n                    }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                )}/>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n    const loginBody = (\r\n        <div className={classes.paper}>\r\n            <FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"email\">Email address</InputLabel>\r\n                    <Input id=\"email\" type=\"email\" aria-describedby=\"Enter institution email address\"\r\n                           onChange={(event) => {\r\n                               setEmail(event.target.value)\r\n                           }}\r\n                    />\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"pass\">Password</InputLabel>\r\n                    <Input id=\"pass\" type=\"password\" aria-describedby=\"Enter password\"\r\n                           onChange={(event) => {\r\n                               setPassword(event.target.value)\r\n                           }}/>\r\n                </FormControl>\r\n                {\r\n                    !loginOrRegister ? <FormControl>\r\n                        <InputLabel htmlFor=\"name\">Full name</InputLabel>\r\n                        <Input id=\"name\" aria-describedby=\"Enter full name\"\r\n                               onChange={(event) => {\r\n                                   setName(event.target.value)\r\n                               }}/>\r\n                    </FormControl> : null\r\n                }\r\n                <FormControl>\r\n                    <FormHelperText onClick={switchLoginOrRegister}>\r\n                        {\r\n                            loginOrRegister ? \"Don't have an account? Click here to register..\" : \"I have an account, click here to login..\"\r\n                        }\r\n                    </FormHelperText>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <Button onClick={loginOrRegister ? doLogin : doRegister}>{\r\n                        loginOrRegister ? \"Login\" : \"Register\"\r\n                    }</Button>\r\n                </FormControl>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <text onClick={handleOpen}>{!loggedIn ? \"Login\" : \"Logout\"}</text>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"login-modal-title\"\r\n                aria-describedby=\"login-modal-description\"\r\n                className={classes.modal}\r\n            >\r\n                {loggedIn ? logoutBody : loginBody}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginModal;\r\n","// only with pure configuration it's easy to replicate graphs such as\r\n// http://bl.ocks.org/eesur/be2abfb3155a38be4de4 using react-d3-graph\r\nimport React from \"react\";;\r\n\r\nconst data = {\r\n    links: [\r\n        // Groups\r\n        {\r\n            source: \"Marvel\",\r\n            target: \"Heroes\",\r\n        },\r\n        {\r\n            source: \"Marvel\",\r\n            target: \"Villains\",\r\n        },\r\n        {\r\n            source: \"Marvel\",\r\n            target: \"Teams\",\r\n        },\r\n        // Heroes\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Spider-Man\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"CAPTAIN MARVEL\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"HULK\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Black Widow\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Daredevil\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Wolverine\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Captain America\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"Iron Man\",\r\n        },\r\n        {\r\n            source: \"Heroes\",\r\n            target: \"THOR\",\r\n        },\r\n        // Villains\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Dr. Doom\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Mystique\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Red Skull\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Ronan\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Magneto\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Thanos\",\r\n        },\r\n        {\r\n            source: \"Villains\",\r\n            target: \"Black Cat\",\r\n        },\r\n        // Teams\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Avengers\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Guardians of the Galaxy\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Defenders\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"X-Men\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Fantastic Four\",\r\n        },\r\n        {\r\n            source: \"Teams\",\r\n            target: \"Inhumans\",\r\n        },\r\n    ],\r\n    nodes: [\r\n        // Groups\r\n        {\r\n            id: \"Marvel\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/marvel.png\",\r\n            size: 500,\r\n            fontSize: 18,\r\n        },\r\n        {\r\n            id: \"Heroes\",\r\n            symbolType: \"circle\",\r\n            color: \"red\",\r\n            size: 300,\r\n        },\r\n        {\r\n            id: \"Villains\",\r\n            symbolType: \"circle\",\r\n            color: \"red\",\r\n            size: 300,\r\n        },\r\n        {\r\n            id: \"Teams\",\r\n            symbolType: \"circle\",\r\n            color: \"red\",\r\n            size: 300,\r\n        },\r\n        // Heroes\r\n        {\r\n            id: \"Spider-Man\",\r\n            name: \"Peter Benjamin Parker\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_spiderman.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"CAPTAIN MARVEL\",\r\n            name: \"Carol Danvers\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_captainmarvel.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"HULK\",\r\n            name: \"Robert Bruce Banner\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_hulk.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Black Widow\",\r\n            name: \"Natasha Alianovna Romanova\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_blackwidow.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Daredevil\",\r\n            name: \"Matthew Michael Murdock\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_daredevil.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Wolverine\",\r\n            name: \"James Howlett\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_wolverine.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Captain America\",\r\n            name: \"Steven Rogers\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_captainamerica.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Iron Man\",\r\n            name: \"Tony Stark\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_ironman.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"THOR\",\r\n            name: \"Thor Odinson\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/top_thor.png\",\r\n            size: 400,\r\n        },\r\n        // Villains\r\n        {\r\n            id: \"Dr. Doom\",\r\n            name: \"Victor von Doom\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/drdoom.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Mystique\",\r\n            name: \"Unrevealed\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/mystique.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Red Skull\",\r\n            name: \"Johann Shmidt\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/redskull.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Ronan\",\r\n            name: \"Ronan\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/ronan.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Magneto\",\r\n            name: \"Max Eisenhardt\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/magneto.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Thanos\",\r\n            name: \"Thanos\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/thanos.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Black Cat\",\r\n            name: \"Felicia Hardy\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/blackcat.png\",\r\n            size: 400,\r\n        },\r\n        // Teams\r\n        {\r\n            id: \"Avengers\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/avengers.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Guardians of the Galaxy\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/gofgalaxy.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Defenders\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/defenders.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"X-Men\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/xmen.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Fantastic Four\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/fantasticfour.png\",\r\n            size: 400,\r\n        },\r\n        {\r\n            id: \"Inhumans\",\r\n            name: \"\",\r\n            svg: \"http://marvel-force-chart.surge.sh/marvel_force_chart_img/inhumans.png\",\r\n            size: 400,\r\n        },\r\n    ],\r\n};\r\n\r\nexport default data;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {ForceGraph3D} from \"react-force-graph\";\r\nimport data from '../marvel/data';\r\nimport WidgetBot from \"@widgetbot/react-embed\";\r\nimport config from '../marvel/config';\r\nimport {getUrl} from \"../res/urls\";\r\n\r\n// graph event callbacks\r\nconst onClickGraph = function () {\r\n    console.log(`Clicked the graph background`);\r\n};\r\n\r\nconst onClickNode = function (nodeId) {\r\n    console.log(`Clicked node ${nodeId}`);\r\n};\r\n\r\nconst onDoubleClickNode = function (nodeId) {\r\n    console.log(`Double clicked node ${nodeId}`);\r\n};\r\n\r\nconst onRightClickNode = function (event, nodeId) {\r\n    console.log(`Right clicked node ${nodeId}`);\r\n};\r\n\r\nconst onMouseOverNode = function (nodeId) {\r\n    console.log(`Mouse over node ${nodeId}`);\r\n};\r\n\r\nconst onMouseOutNode = function (nodeId) {\r\n    console.log(`Mouse out node ${nodeId}`);\r\n};\r\n\r\nconst onClickLink = function (source, target) {\r\n    console.log(`Clicked link between ${source} and ${target}`);\r\n};\r\n\r\nconst onRightClickLink = function (event, source, target) {\r\n    console.log(`Right clicked link between ${source} and ${target}`);\r\n};\r\n\r\nconst onMouseOverLink = function (source, target) {\r\n    console.log(`Mouse over in link between ${source} and ${target}`);\r\n};\r\n\r\nconst onMouseOutLink = function (source, target) {\r\n    console.log(`Mouse out link between ${source} and ${target}`);\r\n};\r\n\r\nconst onNodePositionChange = function (nodeId, x, y) {\r\n    console.log(`Node ${nodeId} is moved to new position. New position is x= ${x} y= ${y}`);\r\n};\r\n\r\nfunction ViewKeywords(props) {\r\n    const space_id = decodeURI(window.location.href).split('/s/')[1];\r\n    const [myData, setData] = useState(data);\r\n    const [graphWidth, setGraphWidth] = useState(window.innerWidth / 3 * 2 - 10);\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            getUrl(\"space\"), {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"id\": space_id,\r\n                })\r\n            })\r\n            .then(function (response) {\r\n                return response.json()\r\n            })\r\n            .then(function (data) {\r\n                const keys = data['keys']\r\n                if (data['id']) {\r\n                    fetch(getUrl(\"graph/sub?keys=\") + keys)\r\n                        .then(res => res.json())\r\n                        .then((info) => {\r\n                            info = info[\"info\"];\r\n                            let nodes = Array();\r\n                            for (let key in info[\"nodes\"]) {\r\n                                let currentNode = info[\"nodes\"][key];\r\n                                currentNode[\"name\"] = currentNode[\"id\"];\r\n                                nodes.push(currentNode);\r\n                            }\r\n                            let relations = Array();\r\n                            for (let dst in info[\"relationships\"]) {\r\n                                for (let src in info[\"relationships\"][dst]) {\r\n                                    relations.push({\r\n                                        source: src,\r\n                                        target: dst,\r\n                                        type: info[\"relationships\"][dst][src]\r\n                                    });\r\n                                }\r\n                            }\r\n                            setData({\r\n                                links: relations,\r\n                                nodes: nodes\r\n                            });\r\n                        })\r\n                        .catch(console.log)\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{display: \"flex\"}}>\r\n            <ForceGraph3D\r\n                graphData={myData}\r\n                linkWidth={2}\r\n                width={graphWidth}\r\n            />\r\n            <WidgetBot\r\n                server=\"717755444646379600\"\r\n                channel=\"717835175635058816\"\r\n                shard=\"https://e.widgetbot.io\"\r\n                width={window.innerWidth - graphWidth}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewKeywords;\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport PresentationPage from \"./components/pages/PresentationPage\";\r\nimport Home from \"./components/pages/Home\";\r\nimport ModalSearch from \"./components/pages/SearchModal\";\r\nimport LoginModal from \"./components/pages/LoginModal\";\r\nimport ViewKeywords from \"./components/pages/Visualize\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    AppBar, Toolbar, Typography,\r\n    Button, IconButton, Menu, MenuItem,\r\n    InputBase, TextField, Checkbox\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\r\n                                    aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem onClick={handleClose}>\r\n                                <Link to=\"/\">Root</Link>\r\n                            </MenuItem>\r\n                            <MenuItem onClick={handleClose}>\r\n                                <Link to=\"/home\">Home</Link>\r\n                            </MenuItem>\r\n                            <MenuItem onClick={handleClose}>\r\n                                <LoginModal />\r\n                            </MenuItem>\r\n                        </Menu>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            BioSpace\r\n                        </Typography>\r\n                        <Switch>\r\n                            <Route path=\"/home\">\r\n                                <ModalSearch/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Switch>\r\n                    <Route path=\"/home\">\r\n                        <Home/>\r\n                    </Route>\r\n                    <Route path=\"/s\">\r\n                        <ViewKeywords/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <PresentationPage />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}